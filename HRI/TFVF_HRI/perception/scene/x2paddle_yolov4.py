# NOTE: DON't manually update this code!!!
# Except changing the data layer and the outputs
from paddle.fluid.initializer import Constant
from paddle.fluid.param_attr import ParamAttr
import paddle.fluid as fluid

def x2paddle_net(img_shape):
    x2paddle_input_1 = fluid.layers.data(
        dtype='float32', shape=[-1] + img_shape, name='image',
        append_batch_size=False)
    conv2d_94_bias = fluid.layers.create_parameter(dtype='float32', shape=[255], name='conv2d_94_bias', default_initializer=Constant(0.0))
    conv2d_102_bias = fluid.layers.create_parameter(dtype='float32', shape=[255], name='conv2d_102_bias', default_initializer=Constant(0.0))
    conv2d_110_bias = fluid.layers.create_parameter(dtype='float32', shape=[255], name='conv2d_110_bias', default_initializer=Constant(0.0))
    conv2d_1_convolution = fluid.layers.conv2d(x2paddle_input_1, bias_attr=False, param_attr='conv2d_1_kernel', num_filters=32, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_1_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_1_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_1_gamma', bias_attr='batch_normalization_1_beta', moving_mean_name='batch_normalization_1_moving_mean', moving_variance_name='batch_normalization_1_moving_variance', is_test=True)
    batch_normalization_1_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_1_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_1_Softplus = fluid.layers.transpose(batch_normalization_1_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_1_Softplus = fluid.layers.softplus(mish_1_Softplus)
    mish_1_Softplus = fluid.layers.transpose(mish_1_Softplus, perm=[0, 2, 3, 1])
    mish_1_Tanh = fluid.layers.transpose(mish_1_Softplus, perm=[0, 3, 1, 2])
    mish_1_Tanh = fluid.layers.tanh(mish_1_Tanh)
    batch_normalization_1_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_1_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_1_mul = fluid.layers.elementwise_mul(x=batch_normalization_1_FusedBatchNorm_1, y=mish_1_Tanh)
    zero_padding2d_1_Pad = fluid.layers.pad2d(mish_1_mul, paddings=[1, 0, 1, 0])
    conv2d_2_convolution = fluid.layers.conv2d(zero_padding2d_1_Pad, bias_attr=False, param_attr='conv2d_2_kernel', num_filters=64, filter_size=[3, 3], stride=[2, 2], dilation=[1, 1], padding='VALID')
    batch_normalization_2_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_2_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_2_gamma', bias_attr='batch_normalization_2_beta', moving_mean_name='batch_normalization_2_moving_mean', moving_variance_name='batch_normalization_2_moving_variance', is_test=True)
    batch_normalization_2_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_2_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_2_Softplus = fluid.layers.transpose(batch_normalization_2_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_2_Softplus = fluid.layers.softplus(mish_2_Softplus)
    mish_2_Softplus = fluid.layers.transpose(mish_2_Softplus, perm=[0, 2, 3, 1])
    mish_2_Tanh = fluid.layers.transpose(mish_2_Softplus, perm=[0, 3, 1, 2])
    mish_2_Tanh = fluid.layers.tanh(mish_2_Tanh)
    batch_normalization_2_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_2_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_2_mul = fluid.layers.elementwise_mul(x=batch_normalization_2_FusedBatchNorm_1, y=mish_2_Tanh)
    conv2d_4_convolution = fluid.layers.conv2d(mish_2_mul, bias_attr=False, param_attr='conv2d_4_kernel', num_filters=64, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    conv2d_3_convolution = fluid.layers.conv2d(mish_2_mul, bias_attr=False, param_attr='conv2d_3_kernel', num_filters=64, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_4_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_4_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_4_gamma', bias_attr='batch_normalization_4_beta', moving_mean_name='batch_normalization_4_moving_mean', moving_variance_name='batch_normalization_4_moving_variance', is_test=True)
    batch_normalization_4_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_4_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    batch_normalization_3_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_3_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_3_gamma', bias_attr='batch_normalization_3_beta', moving_mean_name='batch_normalization_3_moving_mean', moving_variance_name='batch_normalization_3_moving_variance', is_test=True)
    batch_normalization_3_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_3_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_4_Softplus = fluid.layers.transpose(batch_normalization_4_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_4_Softplus = fluid.layers.softplus(mish_4_Softplus)
    mish_4_Softplus = fluid.layers.transpose(mish_4_Softplus, perm=[0, 2, 3, 1])
    mish_3_Softplus = fluid.layers.transpose(batch_normalization_3_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_3_Softplus = fluid.layers.softplus(mish_3_Softplus)
    mish_3_Softplus = fluid.layers.transpose(mish_3_Softplus, perm=[0, 2, 3, 1])
    mish_4_Tanh = fluid.layers.transpose(mish_4_Softplus, perm=[0, 3, 1, 2])
    mish_4_Tanh = fluid.layers.tanh(mish_4_Tanh)
    mish_3_Tanh = fluid.layers.transpose(mish_3_Softplus, perm=[0, 3, 1, 2])
    mish_3_Tanh = fluid.layers.tanh(mish_3_Tanh)
    batch_normalization_4_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_4_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_4_mul = fluid.layers.elementwise_mul(x=batch_normalization_4_FusedBatchNorm_1, y=mish_4_Tanh)
    batch_normalization_3_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_3_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_3_mul = fluid.layers.elementwise_mul(x=batch_normalization_3_FusedBatchNorm_1, y=mish_3_Tanh)
    mish_3_mul = fluid.layers.transpose(mish_3_mul, perm=[0, 2, 3, 1])
    conv2d_5_convolution = fluid.layers.conv2d(mish_4_mul, bias_attr=False, param_attr='conv2d_5_kernel', num_filters=32, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_5_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_5_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_5_gamma', bias_attr='batch_normalization_5_beta', moving_mean_name='batch_normalization_5_moving_mean', moving_variance_name='batch_normalization_5_moving_variance', is_test=True)
    batch_normalization_5_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_5_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_5_Softplus = fluid.layers.transpose(batch_normalization_5_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_5_Softplus = fluid.layers.softplus(mish_5_Softplus)
    mish_5_Softplus = fluid.layers.transpose(mish_5_Softplus, perm=[0, 2, 3, 1])
    mish_5_Tanh = fluid.layers.transpose(mish_5_Softplus, perm=[0, 3, 1, 2])
    mish_5_Tanh = fluid.layers.tanh(mish_5_Tanh)
    batch_normalization_5_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_5_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_5_mul = fluid.layers.elementwise_mul(x=batch_normalization_5_FusedBatchNorm_1, y=mish_5_Tanh)
    conv2d_6_convolution = fluid.layers.conv2d(mish_5_mul, bias_attr=False, param_attr='conv2d_6_kernel', num_filters=64, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_6_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_6_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_6_gamma', bias_attr='batch_normalization_6_beta', moving_mean_name='batch_normalization_6_moving_mean', moving_variance_name='batch_normalization_6_moving_variance', is_test=True)
    batch_normalization_6_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_6_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_6_Softplus = fluid.layers.transpose(batch_normalization_6_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_6_Softplus = fluid.layers.softplus(mish_6_Softplus)
    mish_6_Softplus = fluid.layers.transpose(mish_6_Softplus, perm=[0, 2, 3, 1])
    mish_6_Tanh = fluid.layers.transpose(mish_6_Softplus, perm=[0, 3, 1, 2])
    mish_6_Tanh = fluid.layers.tanh(mish_6_Tanh)
    batch_normalization_6_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_6_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_6_mul = fluid.layers.elementwise_mul(x=batch_normalization_6_FusedBatchNorm_1, y=mish_6_Tanh)
    add_1_add = fluid.layers.elementwise_add(x=mish_4_mul, y=mish_6_mul)
    conv2d_7_convolution = fluid.layers.conv2d(add_1_add, bias_attr=False, param_attr='conv2d_7_kernel', num_filters=64, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_7_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_7_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_7_gamma', bias_attr='batch_normalization_7_beta', moving_mean_name='batch_normalization_7_moving_mean', moving_variance_name='batch_normalization_7_moving_variance', is_test=True)
    batch_normalization_7_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_7_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_7_Softplus = fluid.layers.transpose(batch_normalization_7_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_7_Softplus = fluid.layers.softplus(mish_7_Softplus)
    mish_7_Softplus = fluid.layers.transpose(mish_7_Softplus, perm=[0, 2, 3, 1])
    mish_7_Tanh = fluid.layers.transpose(mish_7_Softplus, perm=[0, 3, 1, 2])
    mish_7_Tanh = fluid.layers.tanh(mish_7_Tanh)
    batch_normalization_7_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_7_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_7_mul = fluid.layers.elementwise_mul(x=batch_normalization_7_FusedBatchNorm_1, y=mish_7_Tanh)
    mish_7_mul = fluid.layers.transpose(mish_7_mul, perm=[0, 2, 3, 1])
    concatenate_1_concat = fluid.layers.concat([mish_7_mul, mish_3_mul], axis=3)
    conv2d_8_convolution = fluid.layers.transpose(concatenate_1_concat, perm=[0, 3, 1, 2])
    conv2d_8_convolution = fluid.layers.conv2d(conv2d_8_convolution, bias_attr=False, param_attr='conv2d_8_kernel', num_filters=64, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_8_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_8_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_8_gamma', bias_attr='batch_normalization_8_beta', moving_mean_name='batch_normalization_8_moving_mean', moving_variance_name='batch_normalization_8_moving_variance', is_test=True)
    batch_normalization_8_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_8_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_8_Softplus = fluid.layers.transpose(batch_normalization_8_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_8_Softplus = fluid.layers.softplus(mish_8_Softplus)
    mish_8_Softplus = fluid.layers.transpose(mish_8_Softplus, perm=[0, 2, 3, 1])
    mish_8_Tanh = fluid.layers.transpose(mish_8_Softplus, perm=[0, 3, 1, 2])
    mish_8_Tanh = fluid.layers.tanh(mish_8_Tanh)
    batch_normalization_8_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_8_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_8_mul = fluid.layers.elementwise_mul(x=batch_normalization_8_FusedBatchNorm_1, y=mish_8_Tanh)
    zero_padding2d_2_Pad = fluid.layers.pad2d(mish_8_mul, paddings=[1, 0, 1, 0])
    conv2d_9_convolution = fluid.layers.conv2d(zero_padding2d_2_Pad, bias_attr=False, param_attr='conv2d_9_kernel', num_filters=128, filter_size=[3, 3], stride=[2, 2], dilation=[1, 1], padding='VALID')
    batch_normalization_9_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_9_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_9_gamma', bias_attr='batch_normalization_9_beta', moving_mean_name='batch_normalization_9_moving_mean', moving_variance_name='batch_normalization_9_moving_variance', is_test=True)
    batch_normalization_9_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_9_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_9_Softplus = fluid.layers.transpose(batch_normalization_9_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_9_Softplus = fluid.layers.softplus(mish_9_Softplus)
    mish_9_Softplus = fluid.layers.transpose(mish_9_Softplus, perm=[0, 2, 3, 1])
    mish_9_Tanh = fluid.layers.transpose(mish_9_Softplus, perm=[0, 3, 1, 2])
    mish_9_Tanh = fluid.layers.tanh(mish_9_Tanh)
    batch_normalization_9_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_9_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_9_mul = fluid.layers.elementwise_mul(x=batch_normalization_9_FusedBatchNorm_1, y=mish_9_Tanh)
    conv2d_11_convolution = fluid.layers.conv2d(mish_9_mul, bias_attr=False, param_attr='conv2d_11_kernel', num_filters=64, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    conv2d_10_convolution = fluid.layers.conv2d(mish_9_mul, bias_attr=False, param_attr='conv2d_10_kernel', num_filters=64, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_11_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_11_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_11_gamma', bias_attr='batch_normalization_11_beta', moving_mean_name='batch_normalization_11_moving_mean', moving_variance_name='batch_normalization_11_moving_variance', is_test=True)
    batch_normalization_11_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_11_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    batch_normalization_10_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_10_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_10_gamma', bias_attr='batch_normalization_10_beta', moving_mean_name='batch_normalization_10_moving_mean', moving_variance_name='batch_normalization_10_moving_variance', is_test=True)
    batch_normalization_10_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_10_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_11_Softplus = fluid.layers.transpose(batch_normalization_11_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_11_Softplus = fluid.layers.softplus(mish_11_Softplus)
    mish_11_Softplus = fluid.layers.transpose(mish_11_Softplus, perm=[0, 2, 3, 1])
    mish_10_Softplus = fluid.layers.transpose(batch_normalization_10_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_10_Softplus = fluid.layers.softplus(mish_10_Softplus)
    mish_10_Softplus = fluid.layers.transpose(mish_10_Softplus, perm=[0, 2, 3, 1])
    mish_11_Tanh = fluid.layers.transpose(mish_11_Softplus, perm=[0, 3, 1, 2])
    mish_11_Tanh = fluid.layers.tanh(mish_11_Tanh)
    mish_10_Tanh = fluid.layers.transpose(mish_10_Softplus, perm=[0, 3, 1, 2])
    mish_10_Tanh = fluid.layers.tanh(mish_10_Tanh)
    batch_normalization_11_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_11_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_11_mul = fluid.layers.elementwise_mul(x=batch_normalization_11_FusedBatchNorm_1, y=mish_11_Tanh)
    batch_normalization_10_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_10_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_10_mul = fluid.layers.elementwise_mul(x=batch_normalization_10_FusedBatchNorm_1, y=mish_10_Tanh)
    mish_10_mul = fluid.layers.transpose(mish_10_mul, perm=[0, 2, 3, 1])
    conv2d_12_convolution = fluid.layers.conv2d(mish_11_mul, bias_attr=False, param_attr='conv2d_12_kernel', num_filters=64, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_12_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_12_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_12_gamma', bias_attr='batch_normalization_12_beta', moving_mean_name='batch_normalization_12_moving_mean', moving_variance_name='batch_normalization_12_moving_variance', is_test=True)
    batch_normalization_12_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_12_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_12_Softplus = fluid.layers.transpose(batch_normalization_12_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_12_Softplus = fluid.layers.softplus(mish_12_Softplus)
    mish_12_Softplus = fluid.layers.transpose(mish_12_Softplus, perm=[0, 2, 3, 1])
    mish_12_Tanh = fluid.layers.transpose(mish_12_Softplus, perm=[0, 3, 1, 2])
    mish_12_Tanh = fluid.layers.tanh(mish_12_Tanh)
    batch_normalization_12_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_12_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_12_mul = fluid.layers.elementwise_mul(x=batch_normalization_12_FusedBatchNorm_1, y=mish_12_Tanh)
    conv2d_13_convolution = fluid.layers.conv2d(mish_12_mul, bias_attr=False, param_attr='conv2d_13_kernel', num_filters=64, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_13_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_13_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_13_gamma', bias_attr='batch_normalization_13_beta', moving_mean_name='batch_normalization_13_moving_mean', moving_variance_name='batch_normalization_13_moving_variance', is_test=True)
    batch_normalization_13_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_13_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_13_Softplus = fluid.layers.transpose(batch_normalization_13_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_13_Softplus = fluid.layers.softplus(mish_13_Softplus)
    mish_13_Softplus = fluid.layers.transpose(mish_13_Softplus, perm=[0, 2, 3, 1])
    mish_13_Tanh = fluid.layers.transpose(mish_13_Softplus, perm=[0, 3, 1, 2])
    mish_13_Tanh = fluid.layers.tanh(mish_13_Tanh)
    batch_normalization_13_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_13_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_13_mul = fluid.layers.elementwise_mul(x=batch_normalization_13_FusedBatchNorm_1, y=mish_13_Tanh)
    add_2_add = fluid.layers.elementwise_add(x=mish_11_mul, y=mish_13_mul)
    conv2d_14_convolution = fluid.layers.conv2d(add_2_add, bias_attr=False, param_attr='conv2d_14_kernel', num_filters=64, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_14_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_14_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_14_gamma', bias_attr='batch_normalization_14_beta', moving_mean_name='batch_normalization_14_moving_mean', moving_variance_name='batch_normalization_14_moving_variance', is_test=True)
    batch_normalization_14_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_14_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_14_Softplus = fluid.layers.transpose(batch_normalization_14_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_14_Softplus = fluid.layers.softplus(mish_14_Softplus)
    mish_14_Softplus = fluid.layers.transpose(mish_14_Softplus, perm=[0, 2, 3, 1])
    mish_14_Tanh = fluid.layers.transpose(mish_14_Softplus, perm=[0, 3, 1, 2])
    mish_14_Tanh = fluid.layers.tanh(mish_14_Tanh)
    batch_normalization_14_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_14_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_14_mul = fluid.layers.elementwise_mul(x=batch_normalization_14_FusedBatchNorm_1, y=mish_14_Tanh)
    conv2d_15_convolution = fluid.layers.conv2d(mish_14_mul, bias_attr=False, param_attr='conv2d_15_kernel', num_filters=64, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_15_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_15_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_15_gamma', bias_attr='batch_normalization_15_beta', moving_mean_name='batch_normalization_15_moving_mean', moving_variance_name='batch_normalization_15_moving_variance', is_test=True)
    batch_normalization_15_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_15_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_15_Softplus = fluid.layers.transpose(batch_normalization_15_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_15_Softplus = fluid.layers.softplus(mish_15_Softplus)
    mish_15_Softplus = fluid.layers.transpose(mish_15_Softplus, perm=[0, 2, 3, 1])
    mish_15_Tanh = fluid.layers.transpose(mish_15_Softplus, perm=[0, 3, 1, 2])
    mish_15_Tanh = fluid.layers.tanh(mish_15_Tanh)
    batch_normalization_15_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_15_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_15_mul = fluid.layers.elementwise_mul(x=batch_normalization_15_FusedBatchNorm_1, y=mish_15_Tanh)
    add_3_add = fluid.layers.elementwise_add(x=add_2_add, y=mish_15_mul)
    conv2d_16_convolution = fluid.layers.conv2d(add_3_add, bias_attr=False, param_attr='conv2d_16_kernel', num_filters=64, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_16_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_16_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_16_gamma', bias_attr='batch_normalization_16_beta', moving_mean_name='batch_normalization_16_moving_mean', moving_variance_name='batch_normalization_16_moving_variance', is_test=True)
    batch_normalization_16_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_16_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_16_Softplus = fluid.layers.transpose(batch_normalization_16_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_16_Softplus = fluid.layers.softplus(mish_16_Softplus)
    mish_16_Softplus = fluid.layers.transpose(mish_16_Softplus, perm=[0, 2, 3, 1])
    mish_16_Tanh = fluid.layers.transpose(mish_16_Softplus, perm=[0, 3, 1, 2])
    mish_16_Tanh = fluid.layers.tanh(mish_16_Tanh)
    batch_normalization_16_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_16_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_16_mul = fluid.layers.elementwise_mul(x=batch_normalization_16_FusedBatchNorm_1, y=mish_16_Tanh)
    mish_16_mul = fluid.layers.transpose(mish_16_mul, perm=[0, 2, 3, 1])
    concatenate_2_concat = fluid.layers.concat([mish_16_mul, mish_10_mul], axis=3)
    conv2d_17_convolution = fluid.layers.transpose(concatenate_2_concat, perm=[0, 3, 1, 2])
    conv2d_17_convolution = fluid.layers.conv2d(conv2d_17_convolution, bias_attr=False, param_attr='conv2d_17_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_17_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_17_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_17_gamma', bias_attr='batch_normalization_17_beta', moving_mean_name='batch_normalization_17_moving_mean', moving_variance_name='batch_normalization_17_moving_variance', is_test=True)
    batch_normalization_17_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_17_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_17_Softplus = fluid.layers.transpose(batch_normalization_17_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_17_Softplus = fluid.layers.softplus(mish_17_Softplus)
    mish_17_Softplus = fluid.layers.transpose(mish_17_Softplus, perm=[0, 2, 3, 1])
    mish_17_Tanh = fluid.layers.transpose(mish_17_Softplus, perm=[0, 3, 1, 2])
    mish_17_Tanh = fluid.layers.tanh(mish_17_Tanh)
    batch_normalization_17_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_17_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_17_mul = fluid.layers.elementwise_mul(x=batch_normalization_17_FusedBatchNorm_1, y=mish_17_Tanh)
    zero_padding2d_3_Pad = fluid.layers.pad2d(mish_17_mul, paddings=[1, 0, 1, 0])
    conv2d_18_convolution = fluid.layers.conv2d(zero_padding2d_3_Pad, bias_attr=False, param_attr='conv2d_18_kernel', num_filters=256, filter_size=[3, 3], stride=[2, 2], dilation=[1, 1], padding='VALID')
    batch_normalization_18_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_18_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_18_gamma', bias_attr='batch_normalization_18_beta', moving_mean_name='batch_normalization_18_moving_mean', moving_variance_name='batch_normalization_18_moving_variance', is_test=True)
    batch_normalization_18_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_18_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_18_Softplus = fluid.layers.transpose(batch_normalization_18_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_18_Softplus = fluid.layers.softplus(mish_18_Softplus)
    mish_18_Softplus = fluid.layers.transpose(mish_18_Softplus, perm=[0, 2, 3, 1])
    mish_18_Tanh = fluid.layers.transpose(mish_18_Softplus, perm=[0, 3, 1, 2])
    mish_18_Tanh = fluid.layers.tanh(mish_18_Tanh)
    batch_normalization_18_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_18_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_18_mul = fluid.layers.elementwise_mul(x=batch_normalization_18_FusedBatchNorm_1, y=mish_18_Tanh)
    conv2d_20_convolution = fluid.layers.conv2d(mish_18_mul, bias_attr=False, param_attr='conv2d_20_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    conv2d_19_convolution = fluid.layers.conv2d(mish_18_mul, bias_attr=False, param_attr='conv2d_19_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_20_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_20_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_20_gamma', bias_attr='batch_normalization_20_beta', moving_mean_name='batch_normalization_20_moving_mean', moving_variance_name='batch_normalization_20_moving_variance', is_test=True)
    batch_normalization_20_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_20_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    batch_normalization_19_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_19_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_19_gamma', bias_attr='batch_normalization_19_beta', moving_mean_name='batch_normalization_19_moving_mean', moving_variance_name='batch_normalization_19_moving_variance', is_test=True)
    batch_normalization_19_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_19_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_20_Softplus = fluid.layers.transpose(batch_normalization_20_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_20_Softplus = fluid.layers.softplus(mish_20_Softplus)
    mish_20_Softplus = fluid.layers.transpose(mish_20_Softplus, perm=[0, 2, 3, 1])
    mish_19_Softplus = fluid.layers.transpose(batch_normalization_19_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_19_Softplus = fluid.layers.softplus(mish_19_Softplus)
    mish_19_Softplus = fluid.layers.transpose(mish_19_Softplus, perm=[0, 2, 3, 1])
    mish_20_Tanh = fluid.layers.transpose(mish_20_Softplus, perm=[0, 3, 1, 2])
    mish_20_Tanh = fluid.layers.tanh(mish_20_Tanh)
    mish_19_Tanh = fluid.layers.transpose(mish_19_Softplus, perm=[0, 3, 1, 2])
    mish_19_Tanh = fluid.layers.tanh(mish_19_Tanh)
    batch_normalization_20_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_20_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_20_mul = fluid.layers.elementwise_mul(x=batch_normalization_20_FusedBatchNorm_1, y=mish_20_Tanh)
    batch_normalization_19_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_19_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_19_mul = fluid.layers.elementwise_mul(x=batch_normalization_19_FusedBatchNorm_1, y=mish_19_Tanh)
    mish_19_mul = fluid.layers.transpose(mish_19_mul, perm=[0, 2, 3, 1])
    conv2d_21_convolution = fluid.layers.conv2d(mish_20_mul, bias_attr=False, param_attr='conv2d_21_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_21_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_21_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_21_gamma', bias_attr='batch_normalization_21_beta', moving_mean_name='batch_normalization_21_moving_mean', moving_variance_name='batch_normalization_21_moving_variance', is_test=True)
    batch_normalization_21_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_21_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_21_Softplus = fluid.layers.transpose(batch_normalization_21_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_21_Softplus = fluid.layers.softplus(mish_21_Softplus)
    mish_21_Softplus = fluid.layers.transpose(mish_21_Softplus, perm=[0, 2, 3, 1])
    mish_21_Tanh = fluid.layers.transpose(mish_21_Softplus, perm=[0, 3, 1, 2])
    mish_21_Tanh = fluid.layers.tanh(mish_21_Tanh)
    batch_normalization_21_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_21_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_21_mul = fluid.layers.elementwise_mul(x=batch_normalization_21_FusedBatchNorm_1, y=mish_21_Tanh)
    conv2d_22_convolution = fluid.layers.conv2d(mish_21_mul, bias_attr=False, param_attr='conv2d_22_kernel', num_filters=128, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_22_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_22_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_22_gamma', bias_attr='batch_normalization_22_beta', moving_mean_name='batch_normalization_22_moving_mean', moving_variance_name='batch_normalization_22_moving_variance', is_test=True)
    batch_normalization_22_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_22_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_22_Softplus = fluid.layers.transpose(batch_normalization_22_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_22_Softplus = fluid.layers.softplus(mish_22_Softplus)
    mish_22_Softplus = fluid.layers.transpose(mish_22_Softplus, perm=[0, 2, 3, 1])
    mish_22_Tanh = fluid.layers.transpose(mish_22_Softplus, perm=[0, 3, 1, 2])
    mish_22_Tanh = fluid.layers.tanh(mish_22_Tanh)
    batch_normalization_22_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_22_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_22_mul = fluid.layers.elementwise_mul(x=batch_normalization_22_FusedBatchNorm_1, y=mish_22_Tanh)
    add_4_add = fluid.layers.elementwise_add(x=mish_20_mul, y=mish_22_mul)
    conv2d_23_convolution = fluid.layers.conv2d(add_4_add, bias_attr=False, param_attr='conv2d_23_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_23_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_23_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_23_gamma', bias_attr='batch_normalization_23_beta', moving_mean_name='batch_normalization_23_moving_mean', moving_variance_name='batch_normalization_23_moving_variance', is_test=True)
    batch_normalization_23_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_23_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_23_Softplus = fluid.layers.transpose(batch_normalization_23_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_23_Softplus = fluid.layers.softplus(mish_23_Softplus)
    mish_23_Softplus = fluid.layers.transpose(mish_23_Softplus, perm=[0, 2, 3, 1])
    mish_23_Tanh = fluid.layers.transpose(mish_23_Softplus, perm=[0, 3, 1, 2])
    mish_23_Tanh = fluid.layers.tanh(mish_23_Tanh)
    batch_normalization_23_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_23_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_23_mul = fluid.layers.elementwise_mul(x=batch_normalization_23_FusedBatchNorm_1, y=mish_23_Tanh)
    conv2d_24_convolution = fluid.layers.conv2d(mish_23_mul, bias_attr=False, param_attr='conv2d_24_kernel', num_filters=128, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_24_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_24_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_24_gamma', bias_attr='batch_normalization_24_beta', moving_mean_name='batch_normalization_24_moving_mean', moving_variance_name='batch_normalization_24_moving_variance', is_test=True)
    batch_normalization_24_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_24_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_24_Softplus = fluid.layers.transpose(batch_normalization_24_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_24_Softplus = fluid.layers.softplus(mish_24_Softplus)
    mish_24_Softplus = fluid.layers.transpose(mish_24_Softplus, perm=[0, 2, 3, 1])
    mish_24_Tanh = fluid.layers.transpose(mish_24_Softplus, perm=[0, 3, 1, 2])
    mish_24_Tanh = fluid.layers.tanh(mish_24_Tanh)
    batch_normalization_24_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_24_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_24_mul = fluid.layers.elementwise_mul(x=batch_normalization_24_FusedBatchNorm_1, y=mish_24_Tanh)
    add_5_add = fluid.layers.elementwise_add(x=add_4_add, y=mish_24_mul)
    conv2d_25_convolution = fluid.layers.conv2d(add_5_add, bias_attr=False, param_attr='conv2d_25_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_25_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_25_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_25_gamma', bias_attr='batch_normalization_25_beta', moving_mean_name='batch_normalization_25_moving_mean', moving_variance_name='batch_normalization_25_moving_variance', is_test=True)
    batch_normalization_25_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_25_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_25_Softplus = fluid.layers.transpose(batch_normalization_25_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_25_Softplus = fluid.layers.softplus(mish_25_Softplus)
    mish_25_Softplus = fluid.layers.transpose(mish_25_Softplus, perm=[0, 2, 3, 1])
    mish_25_Tanh = fluid.layers.transpose(mish_25_Softplus, perm=[0, 3, 1, 2])
    mish_25_Tanh = fluid.layers.tanh(mish_25_Tanh)
    batch_normalization_25_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_25_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_25_mul = fluid.layers.elementwise_mul(x=batch_normalization_25_FusedBatchNorm_1, y=mish_25_Tanh)
    conv2d_26_convolution = fluid.layers.conv2d(mish_25_mul, bias_attr=False, param_attr='conv2d_26_kernel', num_filters=128, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_26_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_26_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_26_gamma', bias_attr='batch_normalization_26_beta', moving_mean_name='batch_normalization_26_moving_mean', moving_variance_name='batch_normalization_26_moving_variance', is_test=True)
    batch_normalization_26_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_26_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_26_Softplus = fluid.layers.transpose(batch_normalization_26_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_26_Softplus = fluid.layers.softplus(mish_26_Softplus)
    mish_26_Softplus = fluid.layers.transpose(mish_26_Softplus, perm=[0, 2, 3, 1])
    mish_26_Tanh = fluid.layers.transpose(mish_26_Softplus, perm=[0, 3, 1, 2])
    mish_26_Tanh = fluid.layers.tanh(mish_26_Tanh)
    batch_normalization_26_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_26_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_26_mul = fluid.layers.elementwise_mul(x=batch_normalization_26_FusedBatchNorm_1, y=mish_26_Tanh)
    add_6_add = fluid.layers.elementwise_add(x=add_5_add, y=mish_26_mul)
    conv2d_27_convolution = fluid.layers.conv2d(add_6_add, bias_attr=False, param_attr='conv2d_27_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_27_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_27_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_27_gamma', bias_attr='batch_normalization_27_beta', moving_mean_name='batch_normalization_27_moving_mean', moving_variance_name='batch_normalization_27_moving_variance', is_test=True)
    batch_normalization_27_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_27_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_27_Softplus = fluid.layers.transpose(batch_normalization_27_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_27_Softplus = fluid.layers.softplus(mish_27_Softplus)
    mish_27_Softplus = fluid.layers.transpose(mish_27_Softplus, perm=[0, 2, 3, 1])
    mish_27_Tanh = fluid.layers.transpose(mish_27_Softplus, perm=[0, 3, 1, 2])
    mish_27_Tanh = fluid.layers.tanh(mish_27_Tanh)
    batch_normalization_27_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_27_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_27_mul = fluid.layers.elementwise_mul(x=batch_normalization_27_FusedBatchNorm_1, y=mish_27_Tanh)
    conv2d_28_convolution = fluid.layers.conv2d(mish_27_mul, bias_attr=False, param_attr='conv2d_28_kernel', num_filters=128, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_28_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_28_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_28_gamma', bias_attr='batch_normalization_28_beta', moving_mean_name='batch_normalization_28_moving_mean', moving_variance_name='batch_normalization_28_moving_variance', is_test=True)
    batch_normalization_28_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_28_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_28_Softplus = fluid.layers.transpose(batch_normalization_28_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_28_Softplus = fluid.layers.softplus(mish_28_Softplus)
    mish_28_Softplus = fluid.layers.transpose(mish_28_Softplus, perm=[0, 2, 3, 1])
    mish_28_Tanh = fluid.layers.transpose(mish_28_Softplus, perm=[0, 3, 1, 2])
    mish_28_Tanh = fluid.layers.tanh(mish_28_Tanh)
    batch_normalization_28_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_28_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_28_mul = fluid.layers.elementwise_mul(x=batch_normalization_28_FusedBatchNorm_1, y=mish_28_Tanh)
    add_7_add = fluid.layers.elementwise_add(x=add_6_add, y=mish_28_mul)
    conv2d_29_convolution = fluid.layers.conv2d(add_7_add, bias_attr=False, param_attr='conv2d_29_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_29_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_29_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_29_gamma', bias_attr='batch_normalization_29_beta', moving_mean_name='batch_normalization_29_moving_mean', moving_variance_name='batch_normalization_29_moving_variance', is_test=True)
    batch_normalization_29_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_29_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_29_Softplus = fluid.layers.transpose(batch_normalization_29_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_29_Softplus = fluid.layers.softplus(mish_29_Softplus)
    mish_29_Softplus = fluid.layers.transpose(mish_29_Softplus, perm=[0, 2, 3, 1])
    mish_29_Tanh = fluid.layers.transpose(mish_29_Softplus, perm=[0, 3, 1, 2])
    mish_29_Tanh = fluid.layers.tanh(mish_29_Tanh)
    batch_normalization_29_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_29_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_29_mul = fluid.layers.elementwise_mul(x=batch_normalization_29_FusedBatchNorm_1, y=mish_29_Tanh)
    conv2d_30_convolution = fluid.layers.conv2d(mish_29_mul, bias_attr=False, param_attr='conv2d_30_kernel', num_filters=128, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_30_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_30_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_30_gamma', bias_attr='batch_normalization_30_beta', moving_mean_name='batch_normalization_30_moving_mean', moving_variance_name='batch_normalization_30_moving_variance', is_test=True)
    batch_normalization_30_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_30_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_30_Softplus = fluid.layers.transpose(batch_normalization_30_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_30_Softplus = fluid.layers.softplus(mish_30_Softplus)
    mish_30_Softplus = fluid.layers.transpose(mish_30_Softplus, perm=[0, 2, 3, 1])
    mish_30_Tanh = fluid.layers.transpose(mish_30_Softplus, perm=[0, 3, 1, 2])
    mish_30_Tanh = fluid.layers.tanh(mish_30_Tanh)
    batch_normalization_30_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_30_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_30_mul = fluid.layers.elementwise_mul(x=batch_normalization_30_FusedBatchNorm_1, y=mish_30_Tanh)
    add_8_add = fluid.layers.elementwise_add(x=add_7_add, y=mish_30_mul)
    conv2d_31_convolution = fluid.layers.conv2d(add_8_add, bias_attr=False, param_attr='conv2d_31_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_31_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_31_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_31_gamma', bias_attr='batch_normalization_31_beta', moving_mean_name='batch_normalization_31_moving_mean', moving_variance_name='batch_normalization_31_moving_variance', is_test=True)
    batch_normalization_31_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_31_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_31_Softplus = fluid.layers.transpose(batch_normalization_31_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_31_Softplus = fluid.layers.softplus(mish_31_Softplus)
    mish_31_Softplus = fluid.layers.transpose(mish_31_Softplus, perm=[0, 2, 3, 1])
    mish_31_Tanh = fluid.layers.transpose(mish_31_Softplus, perm=[0, 3, 1, 2])
    mish_31_Tanh = fluid.layers.tanh(mish_31_Tanh)
    batch_normalization_31_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_31_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_31_mul = fluid.layers.elementwise_mul(x=batch_normalization_31_FusedBatchNorm_1, y=mish_31_Tanh)
    conv2d_32_convolution = fluid.layers.conv2d(mish_31_mul, bias_attr=False, param_attr='conv2d_32_kernel', num_filters=128, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_32_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_32_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_32_gamma', bias_attr='batch_normalization_32_beta', moving_mean_name='batch_normalization_32_moving_mean', moving_variance_name='batch_normalization_32_moving_variance', is_test=True)
    batch_normalization_32_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_32_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_32_Softplus = fluid.layers.transpose(batch_normalization_32_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_32_Softplus = fluid.layers.softplus(mish_32_Softplus)
    mish_32_Softplus = fluid.layers.transpose(mish_32_Softplus, perm=[0, 2, 3, 1])
    mish_32_Tanh = fluid.layers.transpose(mish_32_Softplus, perm=[0, 3, 1, 2])
    mish_32_Tanh = fluid.layers.tanh(mish_32_Tanh)
    batch_normalization_32_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_32_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_32_mul = fluid.layers.elementwise_mul(x=batch_normalization_32_FusedBatchNorm_1, y=mish_32_Tanh)
    add_9_add = fluid.layers.elementwise_add(x=add_8_add, y=mish_32_mul)
    conv2d_33_convolution = fluid.layers.conv2d(add_9_add, bias_attr=False, param_attr='conv2d_33_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_33_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_33_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_33_gamma', bias_attr='batch_normalization_33_beta', moving_mean_name='batch_normalization_33_moving_mean', moving_variance_name='batch_normalization_33_moving_variance', is_test=True)
    batch_normalization_33_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_33_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_33_Softplus = fluid.layers.transpose(batch_normalization_33_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_33_Softplus = fluid.layers.softplus(mish_33_Softplus)
    mish_33_Softplus = fluid.layers.transpose(mish_33_Softplus, perm=[0, 2, 3, 1])
    mish_33_Tanh = fluid.layers.transpose(mish_33_Softplus, perm=[0, 3, 1, 2])
    mish_33_Tanh = fluid.layers.tanh(mish_33_Tanh)
    batch_normalization_33_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_33_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_33_mul = fluid.layers.elementwise_mul(x=batch_normalization_33_FusedBatchNorm_1, y=mish_33_Tanh)
    conv2d_34_convolution = fluid.layers.conv2d(mish_33_mul, bias_attr=False, param_attr='conv2d_34_kernel', num_filters=128, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_34_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_34_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_34_gamma', bias_attr='batch_normalization_34_beta', moving_mean_name='batch_normalization_34_moving_mean', moving_variance_name='batch_normalization_34_moving_variance', is_test=True)
    batch_normalization_34_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_34_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_34_Softplus = fluid.layers.transpose(batch_normalization_34_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_34_Softplus = fluid.layers.softplus(mish_34_Softplus)
    mish_34_Softplus = fluid.layers.transpose(mish_34_Softplus, perm=[0, 2, 3, 1])
    mish_34_Tanh = fluid.layers.transpose(mish_34_Softplus, perm=[0, 3, 1, 2])
    mish_34_Tanh = fluid.layers.tanh(mish_34_Tanh)
    batch_normalization_34_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_34_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_34_mul = fluid.layers.elementwise_mul(x=batch_normalization_34_FusedBatchNorm_1, y=mish_34_Tanh)
    add_10_add = fluid.layers.elementwise_add(x=add_9_add, y=mish_34_mul)
    conv2d_35_convolution = fluid.layers.conv2d(add_10_add, bias_attr=False, param_attr='conv2d_35_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_35_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_35_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_35_gamma', bias_attr='batch_normalization_35_beta', moving_mean_name='batch_normalization_35_moving_mean', moving_variance_name='batch_normalization_35_moving_variance', is_test=True)
    batch_normalization_35_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_35_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_35_Softplus = fluid.layers.transpose(batch_normalization_35_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_35_Softplus = fluid.layers.softplus(mish_35_Softplus)
    mish_35_Softplus = fluid.layers.transpose(mish_35_Softplus, perm=[0, 2, 3, 1])
    mish_35_Tanh = fluid.layers.transpose(mish_35_Softplus, perm=[0, 3, 1, 2])
    mish_35_Tanh = fluid.layers.tanh(mish_35_Tanh)
    batch_normalization_35_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_35_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_35_mul = fluid.layers.elementwise_mul(x=batch_normalization_35_FusedBatchNorm_1, y=mish_35_Tanh)
    conv2d_36_convolution = fluid.layers.conv2d(mish_35_mul, bias_attr=False, param_attr='conv2d_36_kernel', num_filters=128, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_36_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_36_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_36_gamma', bias_attr='batch_normalization_36_beta', moving_mean_name='batch_normalization_36_moving_mean', moving_variance_name='batch_normalization_36_moving_variance', is_test=True)
    batch_normalization_36_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_36_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_36_Softplus = fluid.layers.transpose(batch_normalization_36_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_36_Softplus = fluid.layers.softplus(mish_36_Softplus)
    mish_36_Softplus = fluid.layers.transpose(mish_36_Softplus, perm=[0, 2, 3, 1])
    mish_36_Tanh = fluid.layers.transpose(mish_36_Softplus, perm=[0, 3, 1, 2])
    mish_36_Tanh = fluid.layers.tanh(mish_36_Tanh)
    batch_normalization_36_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_36_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_36_mul = fluid.layers.elementwise_mul(x=batch_normalization_36_FusedBatchNorm_1, y=mish_36_Tanh)
    add_11_add = fluid.layers.elementwise_add(x=add_10_add, y=mish_36_mul)
    conv2d_37_convolution = fluid.layers.conv2d(add_11_add, bias_attr=False, param_attr='conv2d_37_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_37_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_37_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_37_gamma', bias_attr='batch_normalization_37_beta', moving_mean_name='batch_normalization_37_moving_mean', moving_variance_name='batch_normalization_37_moving_variance', is_test=True)
    batch_normalization_37_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_37_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_37_Softplus = fluid.layers.transpose(batch_normalization_37_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_37_Softplus = fluid.layers.softplus(mish_37_Softplus)
    mish_37_Softplus = fluid.layers.transpose(mish_37_Softplus, perm=[0, 2, 3, 1])
    mish_37_Tanh = fluid.layers.transpose(mish_37_Softplus, perm=[0, 3, 1, 2])
    mish_37_Tanh = fluid.layers.tanh(mish_37_Tanh)
    batch_normalization_37_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_37_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_37_mul = fluid.layers.elementwise_mul(x=batch_normalization_37_FusedBatchNorm_1, y=mish_37_Tanh)
    mish_37_mul = fluid.layers.transpose(mish_37_mul, perm=[0, 2, 3, 1])
    concatenate_3_concat = fluid.layers.concat([mish_37_mul, mish_19_mul], axis=3)
    conv2d_38_convolution = fluid.layers.transpose(concatenate_3_concat, perm=[0, 3, 1, 2])
    conv2d_38_convolution = fluid.layers.conv2d(conv2d_38_convolution, bias_attr=False, param_attr='conv2d_38_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_38_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_38_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_38_gamma', bias_attr='batch_normalization_38_beta', moving_mean_name='batch_normalization_38_moving_mean', moving_variance_name='batch_normalization_38_moving_variance', is_test=True)
    batch_normalization_38_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_38_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_38_Softplus = fluid.layers.transpose(batch_normalization_38_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_38_Softplus = fluid.layers.softplus(mish_38_Softplus)
    mish_38_Softplus = fluid.layers.transpose(mish_38_Softplus, perm=[0, 2, 3, 1])
    mish_38_Tanh = fluid.layers.transpose(mish_38_Softplus, perm=[0, 3, 1, 2])
    mish_38_Tanh = fluid.layers.tanh(mish_38_Tanh)
    batch_normalization_38_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_38_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_38_mul = fluid.layers.elementwise_mul(x=batch_normalization_38_FusedBatchNorm_1, y=mish_38_Tanh)
    zero_padding2d_4_Pad = fluid.layers.pad2d(mish_38_mul, paddings=[1, 0, 1, 0])
    conv2d_87_convolution = fluid.layers.conv2d(mish_38_mul, bias_attr=False, param_attr='conv2d_87_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    conv2d_39_convolution = fluid.layers.conv2d(zero_padding2d_4_Pad, bias_attr=False, param_attr='conv2d_39_kernel', num_filters=512, filter_size=[3, 3], stride=[2, 2], dilation=[1, 1], padding='VALID')
    batch_normalization_87_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_87_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_87_gamma', bias_attr='batch_normalization_87_beta', moving_mean_name='batch_normalization_87_moving_mean', moving_variance_name='batch_normalization_87_moving_variance', is_test=True)
    batch_normalization_39_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_39_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_39_gamma', bias_attr='batch_normalization_39_beta', moving_mean_name='batch_normalization_39_moving_mean', moving_variance_name='batch_normalization_39_moving_variance', is_test=True)
    batch_normalization_39_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_39_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    leaky_re_lu_15_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_87_FusedBatchNorm_1, alpha=0.10000000149011612)
    leaky_re_lu_15_LeakyRelu = fluid.layers.transpose(leaky_re_lu_15_LeakyRelu, perm=[0, 2, 3, 1])
    mish_39_Softplus = fluid.layers.transpose(batch_normalization_39_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_39_Softplus = fluid.layers.softplus(mish_39_Softplus)
    mish_39_Softplus = fluid.layers.transpose(mish_39_Softplus, perm=[0, 2, 3, 1])
    mish_39_Tanh = fluid.layers.transpose(mish_39_Softplus, perm=[0, 3, 1, 2])
    mish_39_Tanh = fluid.layers.tanh(mish_39_Tanh)
    batch_normalization_39_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_39_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_39_mul = fluid.layers.elementwise_mul(x=batch_normalization_39_FusedBatchNorm_1, y=mish_39_Tanh)
    conv2d_41_convolution = fluid.layers.conv2d(mish_39_mul, bias_attr=False, param_attr='conv2d_41_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    conv2d_40_convolution = fluid.layers.conv2d(mish_39_mul, bias_attr=False, param_attr='conv2d_40_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_41_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_41_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_41_gamma', bias_attr='batch_normalization_41_beta', moving_mean_name='batch_normalization_41_moving_mean', moving_variance_name='batch_normalization_41_moving_variance', is_test=True)
    batch_normalization_41_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_41_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    batch_normalization_40_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_40_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_40_gamma', bias_attr='batch_normalization_40_beta', moving_mean_name='batch_normalization_40_moving_mean', moving_variance_name='batch_normalization_40_moving_variance', is_test=True)
    batch_normalization_40_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_40_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_41_Softplus = fluid.layers.transpose(batch_normalization_41_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_41_Softplus = fluid.layers.softplus(mish_41_Softplus)
    mish_41_Softplus = fluid.layers.transpose(mish_41_Softplus, perm=[0, 2, 3, 1])
    mish_40_Softplus = fluid.layers.transpose(batch_normalization_40_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_40_Softplus = fluid.layers.softplus(mish_40_Softplus)
    mish_40_Softplus = fluid.layers.transpose(mish_40_Softplus, perm=[0, 2, 3, 1])
    mish_41_Tanh = fluid.layers.transpose(mish_41_Softplus, perm=[0, 3, 1, 2])
    mish_41_Tanh = fluid.layers.tanh(mish_41_Tanh)
    mish_40_Tanh = fluid.layers.transpose(mish_40_Softplus, perm=[0, 3, 1, 2])
    mish_40_Tanh = fluid.layers.tanh(mish_40_Tanh)
    batch_normalization_41_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_41_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_41_mul = fluid.layers.elementwise_mul(x=batch_normalization_41_FusedBatchNorm_1, y=mish_41_Tanh)
    batch_normalization_40_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_40_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_40_mul = fluid.layers.elementwise_mul(x=batch_normalization_40_FusedBatchNorm_1, y=mish_40_Tanh)
    mish_40_mul = fluid.layers.transpose(mish_40_mul, perm=[0, 2, 3, 1])
    conv2d_42_convolution = fluid.layers.conv2d(mish_41_mul, bias_attr=False, param_attr='conv2d_42_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_42_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_42_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_42_gamma', bias_attr='batch_normalization_42_beta', moving_mean_name='batch_normalization_42_moving_mean', moving_variance_name='batch_normalization_42_moving_variance', is_test=True)
    batch_normalization_42_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_42_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_42_Softplus = fluid.layers.transpose(batch_normalization_42_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_42_Softplus = fluid.layers.softplus(mish_42_Softplus)
    mish_42_Softplus = fluid.layers.transpose(mish_42_Softplus, perm=[0, 2, 3, 1])
    mish_42_Tanh = fluid.layers.transpose(mish_42_Softplus, perm=[0, 3, 1, 2])
    mish_42_Tanh = fluid.layers.tanh(mish_42_Tanh)
    batch_normalization_42_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_42_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_42_mul = fluid.layers.elementwise_mul(x=batch_normalization_42_FusedBatchNorm_1, y=mish_42_Tanh)
    conv2d_43_convolution = fluid.layers.conv2d(mish_42_mul, bias_attr=False, param_attr='conv2d_43_kernel', num_filters=256, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_43_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_43_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_43_gamma', bias_attr='batch_normalization_43_beta', moving_mean_name='batch_normalization_43_moving_mean', moving_variance_name='batch_normalization_43_moving_variance', is_test=True)
    batch_normalization_43_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_43_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_43_Softplus = fluid.layers.transpose(batch_normalization_43_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_43_Softplus = fluid.layers.softplus(mish_43_Softplus)
    mish_43_Softplus = fluid.layers.transpose(mish_43_Softplus, perm=[0, 2, 3, 1])
    mish_43_Tanh = fluid.layers.transpose(mish_43_Softplus, perm=[0, 3, 1, 2])
    mish_43_Tanh = fluid.layers.tanh(mish_43_Tanh)
    batch_normalization_43_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_43_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_43_mul = fluid.layers.elementwise_mul(x=batch_normalization_43_FusedBatchNorm_1, y=mish_43_Tanh)
    add_12_add = fluid.layers.elementwise_add(x=mish_41_mul, y=mish_43_mul)
    conv2d_44_convolution = fluid.layers.conv2d(add_12_add, bias_attr=False, param_attr='conv2d_44_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_44_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_44_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_44_gamma', bias_attr='batch_normalization_44_beta', moving_mean_name='batch_normalization_44_moving_mean', moving_variance_name='batch_normalization_44_moving_variance', is_test=True)
    batch_normalization_44_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_44_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_44_Softplus = fluid.layers.transpose(batch_normalization_44_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_44_Softplus = fluid.layers.softplus(mish_44_Softplus)
    mish_44_Softplus = fluid.layers.transpose(mish_44_Softplus, perm=[0, 2, 3, 1])
    mish_44_Tanh = fluid.layers.transpose(mish_44_Softplus, perm=[0, 3, 1, 2])
    mish_44_Tanh = fluid.layers.tanh(mish_44_Tanh)
    batch_normalization_44_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_44_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_44_mul = fluid.layers.elementwise_mul(x=batch_normalization_44_FusedBatchNorm_1, y=mish_44_Tanh)
    conv2d_45_convolution = fluid.layers.conv2d(mish_44_mul, bias_attr=False, param_attr='conv2d_45_kernel', num_filters=256, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_45_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_45_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_45_gamma', bias_attr='batch_normalization_45_beta', moving_mean_name='batch_normalization_45_moving_mean', moving_variance_name='batch_normalization_45_moving_variance', is_test=True)
    batch_normalization_45_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_45_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_45_Softplus = fluid.layers.transpose(batch_normalization_45_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_45_Softplus = fluid.layers.softplus(mish_45_Softplus)
    mish_45_Softplus = fluid.layers.transpose(mish_45_Softplus, perm=[0, 2, 3, 1])
    mish_45_Tanh = fluid.layers.transpose(mish_45_Softplus, perm=[0, 3, 1, 2])
    mish_45_Tanh = fluid.layers.tanh(mish_45_Tanh)
    batch_normalization_45_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_45_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_45_mul = fluid.layers.elementwise_mul(x=batch_normalization_45_FusedBatchNorm_1, y=mish_45_Tanh)
    add_13_add = fluid.layers.elementwise_add(x=add_12_add, y=mish_45_mul)
    conv2d_46_convolution = fluid.layers.conv2d(add_13_add, bias_attr=False, param_attr='conv2d_46_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_46_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_46_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_46_gamma', bias_attr='batch_normalization_46_beta', moving_mean_name='batch_normalization_46_moving_mean', moving_variance_name='batch_normalization_46_moving_variance', is_test=True)
    batch_normalization_46_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_46_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_46_Softplus = fluid.layers.transpose(batch_normalization_46_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_46_Softplus = fluid.layers.softplus(mish_46_Softplus)
    mish_46_Softplus = fluid.layers.transpose(mish_46_Softplus, perm=[0, 2, 3, 1])
    mish_46_Tanh = fluid.layers.transpose(mish_46_Softplus, perm=[0, 3, 1, 2])
    mish_46_Tanh = fluid.layers.tanh(mish_46_Tanh)
    batch_normalization_46_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_46_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_46_mul = fluid.layers.elementwise_mul(x=batch_normalization_46_FusedBatchNorm_1, y=mish_46_Tanh)
    conv2d_47_convolution = fluid.layers.conv2d(mish_46_mul, bias_attr=False, param_attr='conv2d_47_kernel', num_filters=256, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_47_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_47_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_47_gamma', bias_attr='batch_normalization_47_beta', moving_mean_name='batch_normalization_47_moving_mean', moving_variance_name='batch_normalization_47_moving_variance', is_test=True)
    batch_normalization_47_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_47_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_47_Softplus = fluid.layers.transpose(batch_normalization_47_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_47_Softplus = fluid.layers.softplus(mish_47_Softplus)
    mish_47_Softplus = fluid.layers.transpose(mish_47_Softplus, perm=[0, 2, 3, 1])
    mish_47_Tanh = fluid.layers.transpose(mish_47_Softplus, perm=[0, 3, 1, 2])
    mish_47_Tanh = fluid.layers.tanh(mish_47_Tanh)
    batch_normalization_47_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_47_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_47_mul = fluid.layers.elementwise_mul(x=batch_normalization_47_FusedBatchNorm_1, y=mish_47_Tanh)
    add_14_add = fluid.layers.elementwise_add(x=add_13_add, y=mish_47_mul)
    conv2d_48_convolution = fluid.layers.conv2d(add_14_add, bias_attr=False, param_attr='conv2d_48_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_48_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_48_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_48_gamma', bias_attr='batch_normalization_48_beta', moving_mean_name='batch_normalization_48_moving_mean', moving_variance_name='batch_normalization_48_moving_variance', is_test=True)
    batch_normalization_48_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_48_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_48_Softplus = fluid.layers.transpose(batch_normalization_48_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_48_Softplus = fluid.layers.softplus(mish_48_Softplus)
    mish_48_Softplus = fluid.layers.transpose(mish_48_Softplus, perm=[0, 2, 3, 1])
    mish_48_Tanh = fluid.layers.transpose(mish_48_Softplus, perm=[0, 3, 1, 2])
    mish_48_Tanh = fluid.layers.tanh(mish_48_Tanh)
    batch_normalization_48_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_48_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_48_mul = fluid.layers.elementwise_mul(x=batch_normalization_48_FusedBatchNorm_1, y=mish_48_Tanh)
    conv2d_49_convolution = fluid.layers.conv2d(mish_48_mul, bias_attr=False, param_attr='conv2d_49_kernel', num_filters=256, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_49_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_49_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_49_gamma', bias_attr='batch_normalization_49_beta', moving_mean_name='batch_normalization_49_moving_mean', moving_variance_name='batch_normalization_49_moving_variance', is_test=True)
    batch_normalization_49_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_49_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_49_Softplus = fluid.layers.transpose(batch_normalization_49_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_49_Softplus = fluid.layers.softplus(mish_49_Softplus)
    mish_49_Softplus = fluid.layers.transpose(mish_49_Softplus, perm=[0, 2, 3, 1])
    mish_49_Tanh = fluid.layers.transpose(mish_49_Softplus, perm=[0, 3, 1, 2])
    mish_49_Tanh = fluid.layers.tanh(mish_49_Tanh)
    batch_normalization_49_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_49_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_49_mul = fluid.layers.elementwise_mul(x=batch_normalization_49_FusedBatchNorm_1, y=mish_49_Tanh)
    add_15_add = fluid.layers.elementwise_add(x=add_14_add, y=mish_49_mul)
    conv2d_50_convolution = fluid.layers.conv2d(add_15_add, bias_attr=False, param_attr='conv2d_50_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_50_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_50_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_50_gamma', bias_attr='batch_normalization_50_beta', moving_mean_name='batch_normalization_50_moving_mean', moving_variance_name='batch_normalization_50_moving_variance', is_test=True)
    batch_normalization_50_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_50_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_50_Softplus = fluid.layers.transpose(batch_normalization_50_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_50_Softplus = fluid.layers.softplus(mish_50_Softplus)
    mish_50_Softplus = fluid.layers.transpose(mish_50_Softplus, perm=[0, 2, 3, 1])
    mish_50_Tanh = fluid.layers.transpose(mish_50_Softplus, perm=[0, 3, 1, 2])
    mish_50_Tanh = fluid.layers.tanh(mish_50_Tanh)
    batch_normalization_50_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_50_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_50_mul = fluid.layers.elementwise_mul(x=batch_normalization_50_FusedBatchNorm_1, y=mish_50_Tanh)
    conv2d_51_convolution = fluid.layers.conv2d(mish_50_mul, bias_attr=False, param_attr='conv2d_51_kernel', num_filters=256, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_51_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_51_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_51_gamma', bias_attr='batch_normalization_51_beta', moving_mean_name='batch_normalization_51_moving_mean', moving_variance_name='batch_normalization_51_moving_variance', is_test=True)
    batch_normalization_51_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_51_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_51_Softplus = fluid.layers.transpose(batch_normalization_51_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_51_Softplus = fluid.layers.softplus(mish_51_Softplus)
    mish_51_Softplus = fluid.layers.transpose(mish_51_Softplus, perm=[0, 2, 3, 1])
    mish_51_Tanh = fluid.layers.transpose(mish_51_Softplus, perm=[0, 3, 1, 2])
    mish_51_Tanh = fluid.layers.tanh(mish_51_Tanh)
    batch_normalization_51_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_51_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_51_mul = fluid.layers.elementwise_mul(x=batch_normalization_51_FusedBatchNorm_1, y=mish_51_Tanh)
    add_16_add = fluid.layers.elementwise_add(x=add_15_add, y=mish_51_mul)
    conv2d_52_convolution = fluid.layers.conv2d(add_16_add, bias_attr=False, param_attr='conv2d_52_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_52_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_52_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_52_gamma', bias_attr='batch_normalization_52_beta', moving_mean_name='batch_normalization_52_moving_mean', moving_variance_name='batch_normalization_52_moving_variance', is_test=True)
    batch_normalization_52_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_52_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_52_Softplus = fluid.layers.transpose(batch_normalization_52_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_52_Softplus = fluid.layers.softplus(mish_52_Softplus)
    mish_52_Softplus = fluid.layers.transpose(mish_52_Softplus, perm=[0, 2, 3, 1])
    mish_52_Tanh = fluid.layers.transpose(mish_52_Softplus, perm=[0, 3, 1, 2])
    mish_52_Tanh = fluid.layers.tanh(mish_52_Tanh)
    batch_normalization_52_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_52_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_52_mul = fluid.layers.elementwise_mul(x=batch_normalization_52_FusedBatchNorm_1, y=mish_52_Tanh)
    conv2d_53_convolution = fluid.layers.conv2d(mish_52_mul, bias_attr=False, param_attr='conv2d_53_kernel', num_filters=256, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_53_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_53_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_53_gamma', bias_attr='batch_normalization_53_beta', moving_mean_name='batch_normalization_53_moving_mean', moving_variance_name='batch_normalization_53_moving_variance', is_test=True)
    batch_normalization_53_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_53_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_53_Softplus = fluid.layers.transpose(batch_normalization_53_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_53_Softplus = fluid.layers.softplus(mish_53_Softplus)
    mish_53_Softplus = fluid.layers.transpose(mish_53_Softplus, perm=[0, 2, 3, 1])
    mish_53_Tanh = fluid.layers.transpose(mish_53_Softplus, perm=[0, 3, 1, 2])
    mish_53_Tanh = fluid.layers.tanh(mish_53_Tanh)
    batch_normalization_53_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_53_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_53_mul = fluid.layers.elementwise_mul(x=batch_normalization_53_FusedBatchNorm_1, y=mish_53_Tanh)
    add_17_add = fluid.layers.elementwise_add(x=add_16_add, y=mish_53_mul)
    conv2d_54_convolution = fluid.layers.conv2d(add_17_add, bias_attr=False, param_attr='conv2d_54_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_54_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_54_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_54_gamma', bias_attr='batch_normalization_54_beta', moving_mean_name='batch_normalization_54_moving_mean', moving_variance_name='batch_normalization_54_moving_variance', is_test=True)
    batch_normalization_54_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_54_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_54_Softplus = fluid.layers.transpose(batch_normalization_54_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_54_Softplus = fluid.layers.softplus(mish_54_Softplus)
    mish_54_Softplus = fluid.layers.transpose(mish_54_Softplus, perm=[0, 2, 3, 1])
    mish_54_Tanh = fluid.layers.transpose(mish_54_Softplus, perm=[0, 3, 1, 2])
    mish_54_Tanh = fluid.layers.tanh(mish_54_Tanh)
    batch_normalization_54_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_54_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_54_mul = fluid.layers.elementwise_mul(x=batch_normalization_54_FusedBatchNorm_1, y=mish_54_Tanh)
    conv2d_55_convolution = fluid.layers.conv2d(mish_54_mul, bias_attr=False, param_attr='conv2d_55_kernel', num_filters=256, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_55_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_55_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_55_gamma', bias_attr='batch_normalization_55_beta', moving_mean_name='batch_normalization_55_moving_mean', moving_variance_name='batch_normalization_55_moving_variance', is_test=True)
    batch_normalization_55_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_55_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_55_Softplus = fluid.layers.transpose(batch_normalization_55_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_55_Softplus = fluid.layers.softplus(mish_55_Softplus)
    mish_55_Softplus = fluid.layers.transpose(mish_55_Softplus, perm=[0, 2, 3, 1])
    mish_55_Tanh = fluid.layers.transpose(mish_55_Softplus, perm=[0, 3, 1, 2])
    mish_55_Tanh = fluid.layers.tanh(mish_55_Tanh)
    batch_normalization_55_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_55_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_55_mul = fluid.layers.elementwise_mul(x=batch_normalization_55_FusedBatchNorm_1, y=mish_55_Tanh)
    add_18_add = fluid.layers.elementwise_add(x=add_17_add, y=mish_55_mul)
    conv2d_56_convolution = fluid.layers.conv2d(add_18_add, bias_attr=False, param_attr='conv2d_56_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_56_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_56_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_56_gamma', bias_attr='batch_normalization_56_beta', moving_mean_name='batch_normalization_56_moving_mean', moving_variance_name='batch_normalization_56_moving_variance', is_test=True)
    batch_normalization_56_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_56_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_56_Softplus = fluid.layers.transpose(batch_normalization_56_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_56_Softplus = fluid.layers.softplus(mish_56_Softplus)
    mish_56_Softplus = fluid.layers.transpose(mish_56_Softplus, perm=[0, 2, 3, 1])
    mish_56_Tanh = fluid.layers.transpose(mish_56_Softplus, perm=[0, 3, 1, 2])
    mish_56_Tanh = fluid.layers.tanh(mish_56_Tanh)
    batch_normalization_56_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_56_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_56_mul = fluid.layers.elementwise_mul(x=batch_normalization_56_FusedBatchNorm_1, y=mish_56_Tanh)
    conv2d_57_convolution = fluid.layers.conv2d(mish_56_mul, bias_attr=False, param_attr='conv2d_57_kernel', num_filters=256, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_57_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_57_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_57_gamma', bias_attr='batch_normalization_57_beta', moving_mean_name='batch_normalization_57_moving_mean', moving_variance_name='batch_normalization_57_moving_variance', is_test=True)
    batch_normalization_57_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_57_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_57_Softplus = fluid.layers.transpose(batch_normalization_57_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_57_Softplus = fluid.layers.softplus(mish_57_Softplus)
    mish_57_Softplus = fluid.layers.transpose(mish_57_Softplus, perm=[0, 2, 3, 1])
    mish_57_Tanh = fluid.layers.transpose(mish_57_Softplus, perm=[0, 3, 1, 2])
    mish_57_Tanh = fluid.layers.tanh(mish_57_Tanh)
    batch_normalization_57_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_57_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_57_mul = fluid.layers.elementwise_mul(x=batch_normalization_57_FusedBatchNorm_1, y=mish_57_Tanh)
    add_19_add = fluid.layers.elementwise_add(x=add_18_add, y=mish_57_mul)
    conv2d_58_convolution = fluid.layers.conv2d(add_19_add, bias_attr=False, param_attr='conv2d_58_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_58_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_58_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_58_gamma', bias_attr='batch_normalization_58_beta', moving_mean_name='batch_normalization_58_moving_mean', moving_variance_name='batch_normalization_58_moving_variance', is_test=True)
    batch_normalization_58_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_58_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_58_Softplus = fluid.layers.transpose(batch_normalization_58_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_58_Softplus = fluid.layers.softplus(mish_58_Softplus)
    mish_58_Softplus = fluid.layers.transpose(mish_58_Softplus, perm=[0, 2, 3, 1])
    mish_58_Tanh = fluid.layers.transpose(mish_58_Softplus, perm=[0, 3, 1, 2])
    mish_58_Tanh = fluid.layers.tanh(mish_58_Tanh)
    batch_normalization_58_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_58_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_58_mul = fluid.layers.elementwise_mul(x=batch_normalization_58_FusedBatchNorm_1, y=mish_58_Tanh)
    mish_58_mul = fluid.layers.transpose(mish_58_mul, perm=[0, 2, 3, 1])
    concatenate_4_concat = fluid.layers.concat([mish_58_mul, mish_40_mul], axis=3)
    conv2d_59_convolution = fluid.layers.transpose(concatenate_4_concat, perm=[0, 3, 1, 2])
    conv2d_59_convolution = fluid.layers.conv2d(conv2d_59_convolution, bias_attr=False, param_attr='conv2d_59_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_59_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_59_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_59_gamma', bias_attr='batch_normalization_59_beta', moving_mean_name='batch_normalization_59_moving_mean', moving_variance_name='batch_normalization_59_moving_variance', is_test=True)
    batch_normalization_59_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_59_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_59_Softplus = fluid.layers.transpose(batch_normalization_59_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_59_Softplus = fluid.layers.softplus(mish_59_Softplus)
    mish_59_Softplus = fluid.layers.transpose(mish_59_Softplus, perm=[0, 2, 3, 1])
    mish_59_Tanh = fluid.layers.transpose(mish_59_Softplus, perm=[0, 3, 1, 2])
    mish_59_Tanh = fluid.layers.tanh(mish_59_Tanh)
    batch_normalization_59_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_59_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_59_mul = fluid.layers.elementwise_mul(x=batch_normalization_59_FusedBatchNorm_1, y=mish_59_Tanh)
    zero_padding2d_5_Pad = fluid.layers.pad2d(mish_59_mul, paddings=[1, 0, 1, 0])
    conv2d_80_convolution = fluid.layers.conv2d(mish_59_mul, bias_attr=False, param_attr='conv2d_80_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    conv2d_60_convolution = fluid.layers.conv2d(zero_padding2d_5_Pad, bias_attr=False, param_attr='conv2d_60_kernel', num_filters=1024, filter_size=[3, 3], stride=[2, 2], dilation=[1, 1], padding='VALID')
    batch_normalization_80_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_80_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_80_gamma', bias_attr='batch_normalization_80_beta', moving_mean_name='batch_normalization_80_moving_mean', moving_variance_name='batch_normalization_80_moving_variance', is_test=True)
    batch_normalization_60_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_60_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_60_gamma', bias_attr='batch_normalization_60_beta', moving_mean_name='batch_normalization_60_moving_mean', moving_variance_name='batch_normalization_60_moving_variance', is_test=True)
    batch_normalization_60_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_60_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    leaky_re_lu_8_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_80_FusedBatchNorm_1, alpha=0.10000000149011612)
    leaky_re_lu_8_LeakyRelu = fluid.layers.transpose(leaky_re_lu_8_LeakyRelu, perm=[0, 2, 3, 1])
    mish_60_Softplus = fluid.layers.transpose(batch_normalization_60_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_60_Softplus = fluid.layers.softplus(mish_60_Softplus)
    mish_60_Softplus = fluid.layers.transpose(mish_60_Softplus, perm=[0, 2, 3, 1])
    mish_60_Tanh = fluid.layers.transpose(mish_60_Softplus, perm=[0, 3, 1, 2])
    mish_60_Tanh = fluid.layers.tanh(mish_60_Tanh)
    batch_normalization_60_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_60_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_60_mul = fluid.layers.elementwise_mul(x=batch_normalization_60_FusedBatchNorm_1, y=mish_60_Tanh)
    conv2d_62_convolution = fluid.layers.conv2d(mish_60_mul, bias_attr=False, param_attr='conv2d_62_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    conv2d_61_convolution = fluid.layers.conv2d(mish_60_mul, bias_attr=False, param_attr='conv2d_61_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_62_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_62_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_62_gamma', bias_attr='batch_normalization_62_beta', moving_mean_name='batch_normalization_62_moving_mean', moving_variance_name='batch_normalization_62_moving_variance', is_test=True)
    batch_normalization_62_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_62_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    batch_normalization_61_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_61_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_61_gamma', bias_attr='batch_normalization_61_beta', moving_mean_name='batch_normalization_61_moving_mean', moving_variance_name='batch_normalization_61_moving_variance', is_test=True)
    batch_normalization_61_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_61_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_62_Softplus = fluid.layers.transpose(batch_normalization_62_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_62_Softplus = fluid.layers.softplus(mish_62_Softplus)
    mish_62_Softplus = fluid.layers.transpose(mish_62_Softplus, perm=[0, 2, 3, 1])
    mish_61_Softplus = fluid.layers.transpose(batch_normalization_61_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_61_Softplus = fluid.layers.softplus(mish_61_Softplus)
    mish_61_Softplus = fluid.layers.transpose(mish_61_Softplus, perm=[0, 2, 3, 1])
    mish_62_Tanh = fluid.layers.transpose(mish_62_Softplus, perm=[0, 3, 1, 2])
    mish_62_Tanh = fluid.layers.tanh(mish_62_Tanh)
    mish_61_Tanh = fluid.layers.transpose(mish_61_Softplus, perm=[0, 3, 1, 2])
    mish_61_Tanh = fluid.layers.tanh(mish_61_Tanh)
    batch_normalization_62_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_62_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_62_mul = fluid.layers.elementwise_mul(x=batch_normalization_62_FusedBatchNorm_1, y=mish_62_Tanh)
    batch_normalization_61_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_61_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_61_mul = fluid.layers.elementwise_mul(x=batch_normalization_61_FusedBatchNorm_1, y=mish_61_Tanh)
    mish_61_mul = fluid.layers.transpose(mish_61_mul, perm=[0, 2, 3, 1])
    conv2d_63_convolution = fluid.layers.conv2d(mish_62_mul, bias_attr=False, param_attr='conv2d_63_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_63_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_63_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_63_gamma', bias_attr='batch_normalization_63_beta', moving_mean_name='batch_normalization_63_moving_mean', moving_variance_name='batch_normalization_63_moving_variance', is_test=True)
    batch_normalization_63_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_63_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_63_Softplus = fluid.layers.transpose(batch_normalization_63_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_63_Softplus = fluid.layers.softplus(mish_63_Softplus)
    mish_63_Softplus = fluid.layers.transpose(mish_63_Softplus, perm=[0, 2, 3, 1])
    mish_63_Tanh = fluid.layers.transpose(mish_63_Softplus, perm=[0, 3, 1, 2])
    mish_63_Tanh = fluid.layers.tanh(mish_63_Tanh)
    batch_normalization_63_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_63_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_63_mul = fluid.layers.elementwise_mul(x=batch_normalization_63_FusedBatchNorm_1, y=mish_63_Tanh)
    conv2d_64_convolution = fluid.layers.conv2d(mish_63_mul, bias_attr=False, param_attr='conv2d_64_kernel', num_filters=512, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_64_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_64_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_64_gamma', bias_attr='batch_normalization_64_beta', moving_mean_name='batch_normalization_64_moving_mean', moving_variance_name='batch_normalization_64_moving_variance', is_test=True)
    batch_normalization_64_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_64_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_64_Softplus = fluid.layers.transpose(batch_normalization_64_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_64_Softplus = fluid.layers.softplus(mish_64_Softplus)
    mish_64_Softplus = fluid.layers.transpose(mish_64_Softplus, perm=[0, 2, 3, 1])
    mish_64_Tanh = fluid.layers.transpose(mish_64_Softplus, perm=[0, 3, 1, 2])
    mish_64_Tanh = fluid.layers.tanh(mish_64_Tanh)
    batch_normalization_64_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_64_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_64_mul = fluid.layers.elementwise_mul(x=batch_normalization_64_FusedBatchNorm_1, y=mish_64_Tanh)
    add_20_add = fluid.layers.elementwise_add(x=mish_62_mul, y=mish_64_mul)
    conv2d_65_convolution = fluid.layers.conv2d(add_20_add, bias_attr=False, param_attr='conv2d_65_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_65_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_65_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_65_gamma', bias_attr='batch_normalization_65_beta', moving_mean_name='batch_normalization_65_moving_mean', moving_variance_name='batch_normalization_65_moving_variance', is_test=True)
    batch_normalization_65_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_65_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_65_Softplus = fluid.layers.transpose(batch_normalization_65_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_65_Softplus = fluid.layers.softplus(mish_65_Softplus)
    mish_65_Softplus = fluid.layers.transpose(mish_65_Softplus, perm=[0, 2, 3, 1])
    mish_65_Tanh = fluid.layers.transpose(mish_65_Softplus, perm=[0, 3, 1, 2])
    mish_65_Tanh = fluid.layers.tanh(mish_65_Tanh)
    batch_normalization_65_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_65_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_65_mul = fluid.layers.elementwise_mul(x=batch_normalization_65_FusedBatchNorm_1, y=mish_65_Tanh)
    conv2d_66_convolution = fluid.layers.conv2d(mish_65_mul, bias_attr=False, param_attr='conv2d_66_kernel', num_filters=512, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_66_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_66_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_66_gamma', bias_attr='batch_normalization_66_beta', moving_mean_name='batch_normalization_66_moving_mean', moving_variance_name='batch_normalization_66_moving_variance', is_test=True)
    batch_normalization_66_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_66_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_66_Softplus = fluid.layers.transpose(batch_normalization_66_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_66_Softplus = fluid.layers.softplus(mish_66_Softplus)
    mish_66_Softplus = fluid.layers.transpose(mish_66_Softplus, perm=[0, 2, 3, 1])
    mish_66_Tanh = fluid.layers.transpose(mish_66_Softplus, perm=[0, 3, 1, 2])
    mish_66_Tanh = fluid.layers.tanh(mish_66_Tanh)
    batch_normalization_66_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_66_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_66_mul = fluid.layers.elementwise_mul(x=batch_normalization_66_FusedBatchNorm_1, y=mish_66_Tanh)
    add_21_add = fluid.layers.elementwise_add(x=add_20_add, y=mish_66_mul)
    conv2d_67_convolution = fluid.layers.conv2d(add_21_add, bias_attr=False, param_attr='conv2d_67_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_67_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_67_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_67_gamma', bias_attr='batch_normalization_67_beta', moving_mean_name='batch_normalization_67_moving_mean', moving_variance_name='batch_normalization_67_moving_variance', is_test=True)
    batch_normalization_67_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_67_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_67_Softplus = fluid.layers.transpose(batch_normalization_67_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_67_Softplus = fluid.layers.softplus(mish_67_Softplus)
    mish_67_Softplus = fluid.layers.transpose(mish_67_Softplus, perm=[0, 2, 3, 1])
    mish_67_Tanh = fluid.layers.transpose(mish_67_Softplus, perm=[0, 3, 1, 2])
    mish_67_Tanh = fluid.layers.tanh(mish_67_Tanh)
    batch_normalization_67_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_67_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_67_mul = fluid.layers.elementwise_mul(x=batch_normalization_67_FusedBatchNorm_1, y=mish_67_Tanh)
    conv2d_68_convolution = fluid.layers.conv2d(mish_67_mul, bias_attr=False, param_attr='conv2d_68_kernel', num_filters=512, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_68_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_68_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_68_gamma', bias_attr='batch_normalization_68_beta', moving_mean_name='batch_normalization_68_moving_mean', moving_variance_name='batch_normalization_68_moving_variance', is_test=True)
    batch_normalization_68_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_68_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_68_Softplus = fluid.layers.transpose(batch_normalization_68_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_68_Softplus = fluid.layers.softplus(mish_68_Softplus)
    mish_68_Softplus = fluid.layers.transpose(mish_68_Softplus, perm=[0, 2, 3, 1])
    mish_68_Tanh = fluid.layers.transpose(mish_68_Softplus, perm=[0, 3, 1, 2])
    mish_68_Tanh = fluid.layers.tanh(mish_68_Tanh)
    batch_normalization_68_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_68_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_68_mul = fluid.layers.elementwise_mul(x=batch_normalization_68_FusedBatchNorm_1, y=mish_68_Tanh)
    add_22_add = fluid.layers.elementwise_add(x=add_21_add, y=mish_68_mul)
    conv2d_69_convolution = fluid.layers.conv2d(add_22_add, bias_attr=False, param_attr='conv2d_69_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_69_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_69_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_69_gamma', bias_attr='batch_normalization_69_beta', moving_mean_name='batch_normalization_69_moving_mean', moving_variance_name='batch_normalization_69_moving_variance', is_test=True)
    batch_normalization_69_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_69_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_69_Softplus = fluid.layers.transpose(batch_normalization_69_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_69_Softplus = fluid.layers.softplus(mish_69_Softplus)
    mish_69_Softplus = fluid.layers.transpose(mish_69_Softplus, perm=[0, 2, 3, 1])
    mish_69_Tanh = fluid.layers.transpose(mish_69_Softplus, perm=[0, 3, 1, 2])
    mish_69_Tanh = fluid.layers.tanh(mish_69_Tanh)
    batch_normalization_69_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_69_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_69_mul = fluid.layers.elementwise_mul(x=batch_normalization_69_FusedBatchNorm_1, y=mish_69_Tanh)
    conv2d_70_convolution = fluid.layers.conv2d(mish_69_mul, bias_attr=False, param_attr='conv2d_70_kernel', num_filters=512, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_70_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_70_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_70_gamma', bias_attr='batch_normalization_70_beta', moving_mean_name='batch_normalization_70_moving_mean', moving_variance_name='batch_normalization_70_moving_variance', is_test=True)
    batch_normalization_70_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_70_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_70_Softplus = fluid.layers.transpose(batch_normalization_70_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_70_Softplus = fluid.layers.softplus(mish_70_Softplus)
    mish_70_Softplus = fluid.layers.transpose(mish_70_Softplus, perm=[0, 2, 3, 1])
    mish_70_Tanh = fluid.layers.transpose(mish_70_Softplus, perm=[0, 3, 1, 2])
    mish_70_Tanh = fluid.layers.tanh(mish_70_Tanh)
    batch_normalization_70_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_70_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_70_mul = fluid.layers.elementwise_mul(x=batch_normalization_70_FusedBatchNorm_1, y=mish_70_Tanh)
    add_23_add = fluid.layers.elementwise_add(x=add_22_add, y=mish_70_mul)
    conv2d_71_convolution = fluid.layers.conv2d(add_23_add, bias_attr=False, param_attr='conv2d_71_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_71_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_71_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_71_gamma', bias_attr='batch_normalization_71_beta', moving_mean_name='batch_normalization_71_moving_mean', moving_variance_name='batch_normalization_71_moving_variance', is_test=True)
    batch_normalization_71_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_71_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_71_Softplus = fluid.layers.transpose(batch_normalization_71_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_71_Softplus = fluid.layers.softplus(mish_71_Softplus)
    mish_71_Softplus = fluid.layers.transpose(mish_71_Softplus, perm=[0, 2, 3, 1])
    mish_71_Tanh = fluid.layers.transpose(mish_71_Softplus, perm=[0, 3, 1, 2])
    mish_71_Tanh = fluid.layers.tanh(mish_71_Tanh)
    batch_normalization_71_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_71_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_71_mul = fluid.layers.elementwise_mul(x=batch_normalization_71_FusedBatchNorm_1, y=mish_71_Tanh)
    mish_71_mul = fluid.layers.transpose(mish_71_mul, perm=[0, 2, 3, 1])
    concatenate_5_concat = fluid.layers.concat([mish_71_mul, mish_61_mul], axis=3)
    conv2d_72_convolution = fluid.layers.transpose(concatenate_5_concat, perm=[0, 3, 1, 2])
    conv2d_72_convolution = fluid.layers.conv2d(conv2d_72_convolution, bias_attr=False, param_attr='conv2d_72_kernel', num_filters=1024, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_72_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_72_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_72_gamma', bias_attr='batch_normalization_72_beta', moving_mean_name='batch_normalization_72_moving_mean', moving_variance_name='batch_normalization_72_moving_variance', is_test=True)
    batch_normalization_72_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_72_FusedBatchNorm_1, perm=[0, 2, 3, 1])
    mish_72_Softplus = fluid.layers.transpose(batch_normalization_72_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_72_Softplus = fluid.layers.softplus(mish_72_Softplus)
    mish_72_Softplus = fluid.layers.transpose(mish_72_Softplus, perm=[0, 2, 3, 1])
    mish_72_Tanh = fluid.layers.transpose(mish_72_Softplus, perm=[0, 3, 1, 2])
    mish_72_Tanh = fluid.layers.tanh(mish_72_Tanh)
    batch_normalization_72_FusedBatchNorm_1 = fluid.layers.transpose(batch_normalization_72_FusedBatchNorm_1, perm=[0, 3, 1, 2])
    mish_72_mul = fluid.layers.elementwise_mul(x=batch_normalization_72_FusedBatchNorm_1, y=mish_72_Tanh)
    conv2d_73_convolution = fluid.layers.conv2d(mish_72_mul, bias_attr=False, param_attr='conv2d_73_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_73_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_73_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_73_gamma', bias_attr='batch_normalization_73_beta', moving_mean_name='batch_normalization_73_moving_mean', moving_variance_name='batch_normalization_73_moving_variance', is_test=True)
    leaky_re_lu_1_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_73_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_74_convolution = fluid.layers.conv2d(leaky_re_lu_1_LeakyRelu, bias_attr=False, param_attr='conv2d_74_kernel', num_filters=1024, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_74_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_74_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_74_gamma', bias_attr='batch_normalization_74_beta', moving_mean_name='batch_normalization_74_moving_mean', moving_variance_name='batch_normalization_74_moving_variance', is_test=True)
    leaky_re_lu_2_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_74_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_75_convolution = fluid.layers.conv2d(leaky_re_lu_2_LeakyRelu, bias_attr=False, param_attr='conv2d_75_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_75_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_75_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_75_gamma', bias_attr='batch_normalization_75_beta', moving_mean_name='batch_normalization_75_moving_mean', moving_variance_name='batch_normalization_75_moving_variance', is_test=True)
    leaky_re_lu_3_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_75_FusedBatchNorm_1, alpha=0.10000000149011612)
    leaky_re_lu_3_LeakyRelu = fluid.layers.transpose(leaky_re_lu_3_LeakyRelu, perm=[0, 2, 3, 1])
    max_pooling2d_3_MaxPool = fluid.layers.transpose(leaky_re_lu_3_LeakyRelu, perm=[0, 3, 1, 2])
    max_pooling2d_3_MaxPool = fluid.layers.pool2d(max_pooling2d_3_MaxPool, pool_size=[13, 13], pool_type='max', pool_stride=[1, 1], pool_padding='SAME')
    max_pooling2d_3_MaxPool = fluid.layers.transpose(max_pooling2d_3_MaxPool, perm=[0, 2, 3, 1])
    max_pooling2d_2_MaxPool = fluid.layers.transpose(leaky_re_lu_3_LeakyRelu, perm=[0, 3, 1, 2])
    max_pooling2d_2_MaxPool = fluid.layers.pool2d(max_pooling2d_2_MaxPool, pool_size=[9, 9], pool_type='max', pool_stride=[1, 1], pool_padding='SAME')
    max_pooling2d_2_MaxPool = fluid.layers.transpose(max_pooling2d_2_MaxPool, perm=[0, 2, 3, 1])
    max_pooling2d_1_MaxPool = fluid.layers.transpose(leaky_re_lu_3_LeakyRelu, perm=[0, 3, 1, 2])
    max_pooling2d_1_MaxPool = fluid.layers.pool2d(max_pooling2d_1_MaxPool, pool_size=[5, 5], pool_type='max', pool_stride=[1, 1], pool_padding='SAME')
    max_pooling2d_1_MaxPool = fluid.layers.transpose(max_pooling2d_1_MaxPool, perm=[0, 2, 3, 1])
    concatenate_6_concat = fluid.layers.concat([max_pooling2d_3_MaxPool, max_pooling2d_2_MaxPool, max_pooling2d_1_MaxPool, leaky_re_lu_3_LeakyRelu], axis=3)
    conv2d_76_convolution = fluid.layers.transpose(concatenate_6_concat, perm=[0, 3, 1, 2])
    conv2d_76_convolution = fluid.layers.conv2d(conv2d_76_convolution, bias_attr=False, param_attr='conv2d_76_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_76_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_76_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_76_gamma', bias_attr='batch_normalization_76_beta', moving_mean_name='batch_normalization_76_moving_mean', moving_variance_name='batch_normalization_76_moving_variance', is_test=True)
    leaky_re_lu_4_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_76_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_77_convolution = fluid.layers.conv2d(leaky_re_lu_4_LeakyRelu, bias_attr=False, param_attr='conv2d_77_kernel', num_filters=1024, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_77_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_77_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_77_gamma', bias_attr='batch_normalization_77_beta', moving_mean_name='batch_normalization_77_moving_mean', moving_variance_name='batch_normalization_77_moving_variance', is_test=True)
    leaky_re_lu_5_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_77_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_78_convolution = fluid.layers.conv2d(leaky_re_lu_5_LeakyRelu, bias_attr=False, param_attr='conv2d_78_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_78_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_78_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_78_gamma', bias_attr='batch_normalization_78_beta', moving_mean_name='batch_normalization_78_moving_mean', moving_variance_name='batch_normalization_78_moving_variance', is_test=True)
    leaky_re_lu_6_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_78_FusedBatchNorm_1, alpha=0.10000000149011612)
    leaky_re_lu_6_LeakyRelu = fluid.layers.transpose(leaky_re_lu_6_LeakyRelu, perm=[0, 2, 3, 1])
    conv2d_79_convolution = fluid.layers.transpose(leaky_re_lu_6_LeakyRelu, perm=[0, 3, 1, 2])
    conv2d_79_convolution = fluid.layers.conv2d(conv2d_79_convolution, bias_attr=False, param_attr='conv2d_79_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_79_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_79_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_79_gamma', bias_attr='batch_normalization_79_beta', moving_mean_name='batch_normalization_79_moving_mean', moving_variance_name='batch_normalization_79_moving_variance', is_test=True)
    leaky_re_lu_7_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_79_FusedBatchNorm_1, alpha=0.10000000149011612)
    up_sampling2d_1_ResizeNearestNeighbor = fluid.layers.resize_nearest(leaky_re_lu_7_LeakyRelu, align_corners=False, out_shape=[26, 26])
    up_sampling2d_1_ResizeNearestNeighbor = fluid.layers.transpose(up_sampling2d_1_ResizeNearestNeighbor, perm=[0, 2, 3, 1])
    concatenate_7_concat = fluid.layers.concat([leaky_re_lu_8_LeakyRelu, up_sampling2d_1_ResizeNearestNeighbor], axis=3)
    conv2d_81_convolution = fluid.layers.transpose(concatenate_7_concat, perm=[0, 3, 1, 2])
    conv2d_81_convolution = fluid.layers.conv2d(conv2d_81_convolution, bias_attr=False, param_attr='conv2d_81_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_81_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_81_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_81_gamma', bias_attr='batch_normalization_81_beta', moving_mean_name='batch_normalization_81_moving_mean', moving_variance_name='batch_normalization_81_moving_variance', is_test=True)
    leaky_re_lu_9_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_81_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_82_convolution = fluid.layers.conv2d(leaky_re_lu_9_LeakyRelu, bias_attr=False, param_attr='conv2d_82_kernel', num_filters=512, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_82_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_82_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_82_gamma', bias_attr='batch_normalization_82_beta', moving_mean_name='batch_normalization_82_moving_mean', moving_variance_name='batch_normalization_82_moving_variance', is_test=True)
    leaky_re_lu_10_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_82_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_83_convolution = fluid.layers.conv2d(leaky_re_lu_10_LeakyRelu, bias_attr=False, param_attr='conv2d_83_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_83_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_83_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_83_gamma', bias_attr='batch_normalization_83_beta', moving_mean_name='batch_normalization_83_moving_mean', moving_variance_name='batch_normalization_83_moving_variance', is_test=True)
    leaky_re_lu_11_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_83_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_84_convolution = fluid.layers.conv2d(leaky_re_lu_11_LeakyRelu, bias_attr=False, param_attr='conv2d_84_kernel', num_filters=512, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_84_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_84_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_84_gamma', bias_attr='batch_normalization_84_beta', moving_mean_name='batch_normalization_84_moving_mean', moving_variance_name='batch_normalization_84_moving_variance', is_test=True)
    leaky_re_lu_12_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_84_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_85_convolution = fluid.layers.conv2d(leaky_re_lu_12_LeakyRelu, bias_attr=False, param_attr='conv2d_85_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_85_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_85_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_85_gamma', bias_attr='batch_normalization_85_beta', moving_mean_name='batch_normalization_85_moving_mean', moving_variance_name='batch_normalization_85_moving_variance', is_test=True)
    leaky_re_lu_13_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_85_FusedBatchNorm_1, alpha=0.10000000149011612)
    leaky_re_lu_13_LeakyRelu = fluid.layers.transpose(leaky_re_lu_13_LeakyRelu, perm=[0, 2, 3, 1])
    conv2d_86_convolution = fluid.layers.transpose(leaky_re_lu_13_LeakyRelu, perm=[0, 3, 1, 2])
    conv2d_86_convolution = fluid.layers.conv2d(conv2d_86_convolution, bias_attr=False, param_attr='conv2d_86_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_86_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_86_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_86_gamma', bias_attr='batch_normalization_86_beta', moving_mean_name='batch_normalization_86_moving_mean', moving_variance_name='batch_normalization_86_moving_variance', is_test=True)
    leaky_re_lu_14_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_86_FusedBatchNorm_1, alpha=0.10000000149011612)
    up_sampling2d_2_ResizeNearestNeighbor = fluid.layers.resize_nearest(leaky_re_lu_14_LeakyRelu, align_corners=False, out_shape=[52, 52])
    up_sampling2d_2_ResizeNearestNeighbor = fluid.layers.transpose(up_sampling2d_2_ResizeNearestNeighbor, perm=[0, 2, 3, 1])
    concatenate_8_concat = fluid.layers.concat([leaky_re_lu_15_LeakyRelu, up_sampling2d_2_ResizeNearestNeighbor], axis=3)
    conv2d_88_convolution = fluid.layers.transpose(concatenate_8_concat, perm=[0, 3, 1, 2])
    conv2d_88_convolution = fluid.layers.conv2d(conv2d_88_convolution, bias_attr=False, param_attr='conv2d_88_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_88_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_88_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_88_gamma', bias_attr='batch_normalization_88_beta', moving_mean_name='batch_normalization_88_moving_mean', moving_variance_name='batch_normalization_88_moving_variance', is_test=True)
    leaky_re_lu_16_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_88_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_89_convolution = fluid.layers.conv2d(leaky_re_lu_16_LeakyRelu, bias_attr=False, param_attr='conv2d_89_kernel', num_filters=256, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_89_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_89_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_89_gamma', bias_attr='batch_normalization_89_beta', moving_mean_name='batch_normalization_89_moving_mean', moving_variance_name='batch_normalization_89_moving_variance', is_test=True)
    leaky_re_lu_17_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_89_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_90_convolution = fluid.layers.conv2d(leaky_re_lu_17_LeakyRelu, bias_attr=False, param_attr='conv2d_90_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_90_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_90_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_90_gamma', bias_attr='batch_normalization_90_beta', moving_mean_name='batch_normalization_90_moving_mean', moving_variance_name='batch_normalization_90_moving_variance', is_test=True)
    leaky_re_lu_18_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_90_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_91_convolution = fluid.layers.conv2d(leaky_re_lu_18_LeakyRelu, bias_attr=False, param_attr='conv2d_91_kernel', num_filters=256, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_91_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_91_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_91_gamma', bias_attr='batch_normalization_91_beta', moving_mean_name='batch_normalization_91_moving_mean', moving_variance_name='batch_normalization_91_moving_variance', is_test=True)
    leaky_re_lu_19_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_91_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_92_convolution = fluid.layers.conv2d(leaky_re_lu_19_LeakyRelu, bias_attr=False, param_attr='conv2d_92_kernel', num_filters=128, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_92_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_92_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_92_gamma', bias_attr='batch_normalization_92_beta', moving_mean_name='batch_normalization_92_moving_mean', moving_variance_name='batch_normalization_92_moving_variance', is_test=True)
    leaky_re_lu_20_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_92_FusedBatchNorm_1, alpha=0.10000000149011612)
    zero_padding2d_6_Pad = fluid.layers.pad2d(leaky_re_lu_20_LeakyRelu, paddings=[1, 0, 1, 0])
    conv2d_93_convolution = fluid.layers.conv2d(leaky_re_lu_20_LeakyRelu, bias_attr=False, param_attr='conv2d_93_kernel', num_filters=256, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    conv2d_95_convolution = fluid.layers.conv2d(zero_padding2d_6_Pad, bias_attr=False, param_attr='conv2d_95_kernel', num_filters=256, filter_size=[3, 3], stride=[2, 2], dilation=[1, 1], padding='VALID')
    batch_normalization_93_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_93_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_93_gamma', bias_attr='batch_normalization_93_beta', moving_mean_name='batch_normalization_93_moving_mean', moving_variance_name='batch_normalization_93_moving_variance', is_test=True)
    batch_normalization_94_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_95_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_94_gamma', bias_attr='batch_normalization_94_beta', moving_mean_name='batch_normalization_94_moving_mean', moving_variance_name='batch_normalization_94_moving_variance', is_test=True)
    leaky_re_lu_21_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_93_FusedBatchNorm_1, alpha=0.10000000149011612)
    leaky_re_lu_22_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_94_FusedBatchNorm_1, alpha=0.10000000149011612)
    leaky_re_lu_22_LeakyRelu = fluid.layers.transpose(leaky_re_lu_22_LeakyRelu, perm=[0, 2, 3, 1])
    conv2d_94_BiasAdd = fluid.layers.conv2d(leaky_re_lu_21_LeakyRelu, bias_attr='conv2d_94_bias', param_attr='conv2d_94_kernel', num_filters=255, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    concatenate_9_concat = fluid.layers.concat([leaky_re_lu_22_LeakyRelu, leaky_re_lu_13_LeakyRelu], axis=3)
    conv2d_96_convolution = fluid.layers.transpose(concatenate_9_concat, perm=[0, 3, 1, 2])
    conv2d_96_convolution = fluid.layers.conv2d(conv2d_96_convolution, bias_attr=False, param_attr='conv2d_96_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_95_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_96_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_95_gamma', bias_attr='batch_normalization_95_beta', moving_mean_name='batch_normalization_95_moving_mean', moving_variance_name='batch_normalization_95_moving_variance', is_test=True)
    leaky_re_lu_23_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_95_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_97_convolution = fluid.layers.conv2d(leaky_re_lu_23_LeakyRelu, bias_attr=False, param_attr='conv2d_97_kernel', num_filters=512, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_96_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_97_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_96_gamma', bias_attr='batch_normalization_96_beta', moving_mean_name='batch_normalization_96_moving_mean', moving_variance_name='batch_normalization_96_moving_variance', is_test=True)
    leaky_re_lu_24_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_96_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_98_convolution = fluid.layers.conv2d(leaky_re_lu_24_LeakyRelu, bias_attr=False, param_attr='conv2d_98_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_97_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_98_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_97_gamma', bias_attr='batch_normalization_97_beta', moving_mean_name='batch_normalization_97_moving_mean', moving_variance_name='batch_normalization_97_moving_variance', is_test=True)
    leaky_re_lu_25_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_97_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_99_convolution = fluid.layers.conv2d(leaky_re_lu_25_LeakyRelu, bias_attr=False, param_attr='conv2d_99_kernel', num_filters=512, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_98_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_99_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_98_gamma', bias_attr='batch_normalization_98_beta', moving_mean_name='batch_normalization_98_moving_mean', moving_variance_name='batch_normalization_98_moving_variance', is_test=True)
    leaky_re_lu_26_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_98_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_100_convolution = fluid.layers.conv2d(leaky_re_lu_26_LeakyRelu, bias_attr=False, param_attr='conv2d_100_kernel', num_filters=256, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_99_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_100_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_99_gamma', bias_attr='batch_normalization_99_beta', moving_mean_name='batch_normalization_99_moving_mean', moving_variance_name='batch_normalization_99_moving_variance', is_test=True)
    leaky_re_lu_27_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_99_FusedBatchNorm_1, alpha=0.10000000149011612)
    zero_padding2d_7_Pad = fluid.layers.pad2d(leaky_re_lu_27_LeakyRelu, paddings=[1, 0, 1, 0])
    conv2d_101_convolution = fluid.layers.conv2d(leaky_re_lu_27_LeakyRelu, bias_attr=False, param_attr='conv2d_101_kernel', num_filters=512, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    conv2d_103_convolution = fluid.layers.conv2d(zero_padding2d_7_Pad, bias_attr=False, param_attr='conv2d_103_kernel', num_filters=512, filter_size=[3, 3], stride=[2, 2], dilation=[1, 1], padding='VALID')
    batch_normalization_100_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_101_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_100_gamma', bias_attr='batch_normalization_100_beta', moving_mean_name='batch_normalization_100_moving_mean', moving_variance_name='batch_normalization_100_moving_variance', is_test=True)
    batch_normalization_101_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_103_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_101_gamma', bias_attr='batch_normalization_101_beta', moving_mean_name='batch_normalization_101_moving_mean', moving_variance_name='batch_normalization_101_moving_variance', is_test=True)
    leaky_re_lu_28_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_100_FusedBatchNorm_1, alpha=0.10000000149011612)
    leaky_re_lu_29_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_101_FusedBatchNorm_1, alpha=0.10000000149011612)
    leaky_re_lu_29_LeakyRelu = fluid.layers.transpose(leaky_re_lu_29_LeakyRelu, perm=[0, 2, 3, 1])
    conv2d_102_BiasAdd = fluid.layers.conv2d(leaky_re_lu_28_LeakyRelu, bias_attr='conv2d_102_bias', param_attr='conv2d_102_kernel', num_filters=255, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    concatenate_10_concat = fluid.layers.concat([leaky_re_lu_29_LeakyRelu, leaky_re_lu_6_LeakyRelu], axis=3)
    conv2d_104_convolution = fluid.layers.transpose(concatenate_10_concat, perm=[0, 3, 1, 2])
    conv2d_104_convolution = fluid.layers.conv2d(conv2d_104_convolution, bias_attr=False, param_attr='conv2d_104_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_102_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_104_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_102_gamma', bias_attr='batch_normalization_102_beta', moving_mean_name='batch_normalization_102_moving_mean', moving_variance_name='batch_normalization_102_moving_variance', is_test=True)
    leaky_re_lu_30_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_102_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_105_convolution = fluid.layers.conv2d(leaky_re_lu_30_LeakyRelu, bias_attr=False, param_attr='conv2d_105_kernel', num_filters=1024, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_103_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_105_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_103_gamma', bias_attr='batch_normalization_103_beta', moving_mean_name='batch_normalization_103_moving_mean', moving_variance_name='batch_normalization_103_moving_variance', is_test=True)
    leaky_re_lu_31_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_103_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_106_convolution = fluid.layers.conv2d(leaky_re_lu_31_LeakyRelu, bias_attr=False, param_attr='conv2d_106_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_104_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_106_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_104_gamma', bias_attr='batch_normalization_104_beta', moving_mean_name='batch_normalization_104_moving_mean', moving_variance_name='batch_normalization_104_moving_variance', is_test=True)
    leaky_re_lu_32_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_104_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_107_convolution = fluid.layers.conv2d(leaky_re_lu_32_LeakyRelu, bias_attr=False, param_attr='conv2d_107_kernel', num_filters=1024, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_105_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_107_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_105_gamma', bias_attr='batch_normalization_105_beta', moving_mean_name='batch_normalization_105_moving_mean', moving_variance_name='batch_normalization_105_moving_variance', is_test=True)
    leaky_re_lu_33_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_105_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_108_convolution = fluid.layers.conv2d(leaky_re_lu_33_LeakyRelu, bias_attr=False, param_attr='conv2d_108_kernel', num_filters=512, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_106_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_108_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_106_gamma', bias_attr='batch_normalization_106_beta', moving_mean_name='batch_normalization_106_moving_mean', moving_variance_name='batch_normalization_106_moving_variance', is_test=True)
    leaky_re_lu_34_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_106_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_109_convolution = fluid.layers.conv2d(leaky_re_lu_34_LeakyRelu, bias_attr=False, param_attr='conv2d_109_kernel', num_filters=1024, filter_size=[3, 3], stride=[1, 1], dilation=[1, 1], padding='SAME')
    batch_normalization_107_FusedBatchNorm_1 = fluid.layers.batch_norm(conv2d_109_convolution, epsilon=0.0010000000474974513, param_attr='batch_normalization_107_gamma', bias_attr='batch_normalization_107_beta', moving_mean_name='batch_normalization_107_moving_mean', moving_variance_name='batch_normalization_107_moving_variance', is_test=True)
    leaky_re_lu_35_LeakyRelu = fluid.layers.leaky_relu(batch_normalization_107_FusedBatchNorm_1, alpha=0.10000000149011612)
    conv2d_110_BiasAdd = fluid.layers.conv2d(leaky_re_lu_35_LeakyRelu, bias_attr='conv2d_110_bias', param_attr='conv2d_110_kernel', num_filters=255, filter_size=[1, 1], stride=[1, 1], dilation=[1, 1], padding='SAME')

    return [x2paddle_input_1], [conv2d_94_BiasAdd, conv2d_102_BiasAdd, conv2d_110_BiasAdd], leaky_re_lu_3_LeakyRelu

def run_net(param_dir="./"):
    import os
    inputs, outputs, feature_map = x2paddle_net()
    for i, out in enumerate(outputs):
        if isinstance(out, list):
            for out_part in out:
                outputs.append(out_part)
            del outputs[i]
    exe = fluid.Executor(fluid.CPUPlace())
    exe.run(fluid.default_startup_program())

    def if_exist(var):
        b = os.path.exists(os.path.join(param_dir, var.name))
        return b

    fluid.io.load_vars(exe,
                       param_dir,
                       fluid.default_main_program(),
                       predicate=if_exist)
